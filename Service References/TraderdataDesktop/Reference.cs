//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace Traderdata.Client.TerminalWEB.TraderdataDesktop {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AnaliseDTO", Namespace="http://schemas.datacontract.org/2004/07/Traderdata.Server.App.TraderdataLite.DTO")]
    public partial class AnaliseDTO : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AtivoField;
        
        private string AvaliacaoField;
        
        private string ComentarioField;
        
        private System.DateTime DataField;
        
        private string EmailPublicadorField;
        
        private string FilenameField;
        
        private int IdField;
        
        private int NumeroVisualizacaoField;
        
        private int PeriodicidadeField;
        
        private int PublicadorField;
        
        private string RecomendacaoField;
        
        private string SiteField;
        
        private string TagField;
        
        private string VisibilidadeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ativo {
            get {
                return this.AtivoField;
            }
            set {
                if ((object.ReferenceEquals(this.AtivoField, value) != true)) {
                    this.AtivoField = value;
                    this.RaisePropertyChanged("Ativo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Avaliacao {
            get {
                return this.AvaliacaoField;
            }
            set {
                if ((object.ReferenceEquals(this.AvaliacaoField, value) != true)) {
                    this.AvaliacaoField = value;
                    this.RaisePropertyChanged("Avaliacao");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comentario {
            get {
                return this.ComentarioField;
            }
            set {
                if ((object.ReferenceEquals(this.ComentarioField, value) != true)) {
                    this.ComentarioField = value;
                    this.RaisePropertyChanged("Comentario");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Data {
            get {
                return this.DataField;
            }
            set {
                if ((this.DataField.Equals(value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailPublicador {
            get {
                return this.EmailPublicadorField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailPublicadorField, value) != true)) {
                    this.EmailPublicadorField = value;
                    this.RaisePropertyChanged("EmailPublicador");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Filename {
            get {
                return this.FilenameField;
            }
            set {
                if ((object.ReferenceEquals(this.FilenameField, value) != true)) {
                    this.FilenameField = value;
                    this.RaisePropertyChanged("Filename");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumeroVisualizacao {
            get {
                return this.NumeroVisualizacaoField;
            }
            set {
                if ((this.NumeroVisualizacaoField.Equals(value) != true)) {
                    this.NumeroVisualizacaoField = value;
                    this.RaisePropertyChanged("NumeroVisualizacao");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Periodicidade {
            get {
                return this.PeriodicidadeField;
            }
            set {
                if ((this.PeriodicidadeField.Equals(value) != true)) {
                    this.PeriodicidadeField = value;
                    this.RaisePropertyChanged("Periodicidade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Publicador {
            get {
                return this.PublicadorField;
            }
            set {
                if ((this.PublicadorField.Equals(value) != true)) {
                    this.PublicadorField = value;
                    this.RaisePropertyChanged("Publicador");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Recomendacao {
            get {
                return this.RecomendacaoField;
            }
            set {
                if ((object.ReferenceEquals(this.RecomendacaoField, value) != true)) {
                    this.RecomendacaoField = value;
                    this.RaisePropertyChanged("Recomendacao");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Site {
            get {
                return this.SiteField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteField, value) != true)) {
                    this.SiteField = value;
                    this.RaisePropertyChanged("Site");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tag {
            get {
                return this.TagField;
            }
            set {
                if ((object.ReferenceEquals(this.TagField, value) != true)) {
                    this.TagField = value;
                    this.RaisePropertyChanged("Tag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Visibilidade {
            get {
                return this.VisibilidadeField;
            }
            set {
                if ((object.ReferenceEquals(this.VisibilidadeField, value) != true)) {
                    this.VisibilidadeField = value;
                    this.RaisePropertyChanged("Visibilidade");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LikeAnaliseDTO", Namespace="http://schemas.datacontract.org/2004/07/Traderdata.Server.App.TraderdataLite.DTO")]
    public partial class LikeAnaliseDTO : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int AnaliseField;
        
        private bool LikeField;
        
        private int UsuarioField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Analise {
            get {
                return this.AnaliseField;
            }
            set {
                if ((this.AnaliseField.Equals(value) != true)) {
                    this.AnaliseField = value;
                    this.RaisePropertyChanged("Analise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Like {
            get {
                return this.LikeField;
            }
            set {
                if ((this.LikeField.Equals(value) != true)) {
                    this.LikeField = value;
                    this.RaisePropertyChanged("Like");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Usuario {
            get {
                return this.UsuarioField;
            }
            set {
                if ((this.UsuarioField.Equals(value) != true)) {
                    this.UsuarioField = value;
                    this.RaisePropertyChanged("Usuario");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlertaDTO", Namespace="http://schemas.datacontract.org/2004/07/Traderdata.Server.App.TraderdataLite.DTO")]
    public partial class AlertaDTO : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AtivoField;
        
        private string ComentarioField;
        
        private System.DateTime DataField;
        
        private int IdField;
        
        private string StatusField;
        
        private int UsuarioIdField;
        
        private double ValorField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ativo {
            get {
                return this.AtivoField;
            }
            set {
                if ((object.ReferenceEquals(this.AtivoField, value) != true)) {
                    this.AtivoField = value;
                    this.RaisePropertyChanged("Ativo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comentario {
            get {
                return this.ComentarioField;
            }
            set {
                if ((object.ReferenceEquals(this.ComentarioField, value) != true)) {
                    this.ComentarioField = value;
                    this.RaisePropertyChanged("Comentario");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Data {
            get {
                return this.DataField;
            }
            set {
                if ((this.DataField.Equals(value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UsuarioId {
            get {
                return this.UsuarioIdField;
            }
            set {
                if ((this.UsuarioIdField.Equals(value) != true)) {
                    this.UsuarioIdField = value;
                    this.RaisePropertyChanged("UsuarioId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Valor {
            get {
                return this.ValorField;
            }
            set {
                if ((this.ValorField.Equals(value) != true)) {
                    this.ValorField = value;
                    this.RaisePropertyChanged("Valor");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CarteiraDTO", Namespace="http://schemas.datacontract.org/2004/07/Traderdata.Server.App.TraderdataLite.DTO")]
    public partial class CarteiraDTO : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AtivosField;
        
        private string ColunasField;
        
        private int IdField;
        
        private string NomeField;
        
        private bool PodeApagarField;
        
        private bool SortAscField;
        
        private Traderdata.Client.TerminalWEB.TraderdataDesktop.CarteiraDTO.ColunaGradeEnum SortColumnField;
        
        private string TamanhoColunasField;
        
        private int UsuarioIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ativos {
            get {
                return this.AtivosField;
            }
            set {
                if ((object.ReferenceEquals(this.AtivosField, value) != true)) {
                    this.AtivosField = value;
                    this.RaisePropertyChanged("Ativos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Colunas {
            get {
                return this.ColunasField;
            }
            set {
                if ((object.ReferenceEquals(this.ColunasField, value) != true)) {
                    this.ColunasField = value;
                    this.RaisePropertyChanged("Colunas");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nome {
            get {
                return this.NomeField;
            }
            set {
                if ((object.ReferenceEquals(this.NomeField, value) != true)) {
                    this.NomeField = value;
                    this.RaisePropertyChanged("Nome");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PodeApagar {
            get {
                return this.PodeApagarField;
            }
            set {
                if ((this.PodeApagarField.Equals(value) != true)) {
                    this.PodeApagarField = value;
                    this.RaisePropertyChanged("PodeApagar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SortAsc {
            get {
                return this.SortAscField;
            }
            set {
                if ((this.SortAscField.Equals(value) != true)) {
                    this.SortAscField = value;
                    this.RaisePropertyChanged("SortAsc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Traderdata.Client.TerminalWEB.TraderdataDesktop.CarteiraDTO.ColunaGradeEnum SortColumn {
            get {
                return this.SortColumnField;
            }
            set {
                if ((this.SortColumnField.Equals(value) != true)) {
                    this.SortColumnField = value;
                    this.RaisePropertyChanged("SortColumn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TamanhoColunas {
            get {
                return this.TamanhoColunasField;
            }
            set {
                if ((object.ReferenceEquals(this.TamanhoColunasField, value) != true)) {
                    this.TamanhoColunasField = value;
                    this.RaisePropertyChanged("TamanhoColunas");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UsuarioId {
            get {
                return this.UsuarioIdField;
            }
            set {
                if ((this.UsuarioIdField.Equals(value) != true)) {
                    this.UsuarioIdField = value;
                    this.RaisePropertyChanged("UsuarioId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="CarteiraDTO.ColunaGradeEnum", Namespace="http://schemas.datacontract.org/2004/07/Traderdata.Server.App.TraderdataLite.DTO")]
        public enum ColunaGradeEnum : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Ativo = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Abertura = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Data = 2,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            FechamentoAnterior = 3,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Hora = 4,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Maximo = 5,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Media = 6,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            MelhorOfertaCompra = 7,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            MelhorOfertaVenda = 8,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Minimo = 9,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            NumeroNegocio = 10,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            QuantidadeMelhorOfertaCompra = 11,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            QuantidadeMelhorOfertaVenda = 12,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Quantidade = 13,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            QuantidadeUltimoNegocio = 14,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Ultimo = 15,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Variacao = 16,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Volume = 17,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Desconhecida = 18,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderDTO", Namespace="http://schemas.datacontract.org/2004/07/Traderdata.Server.App.TraderdataLite.DTO")]
    public partial class OrderDTO : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AtivoField;
        
        private string CompraVendaField;
        
        private System.DateTime DataField;
        
        private int IdField;
        
        private double PrecoField;
        
        private double QuantidadeField;
        
        private double QuantidadeExecutadaField;
        
        private string StatusField;
        
        private int UsuarioField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ativo {
            get {
                return this.AtivoField;
            }
            set {
                if ((object.ReferenceEquals(this.AtivoField, value) != true)) {
                    this.AtivoField = value;
                    this.RaisePropertyChanged("Ativo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompraVenda {
            get {
                return this.CompraVendaField;
            }
            set {
                if ((object.ReferenceEquals(this.CompraVendaField, value) != true)) {
                    this.CompraVendaField = value;
                    this.RaisePropertyChanged("CompraVenda");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Data {
            get {
                return this.DataField;
            }
            set {
                if ((this.DataField.Equals(value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Preco {
            get {
                return this.PrecoField;
            }
            set {
                if ((this.PrecoField.Equals(value) != true)) {
                    this.PrecoField = value;
                    this.RaisePropertyChanged("Preco");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Quantidade {
            get {
                return this.QuantidadeField;
            }
            set {
                if ((this.QuantidadeField.Equals(value) != true)) {
                    this.QuantidadeField = value;
                    this.RaisePropertyChanged("Quantidade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double QuantidadeExecutada {
            get {
                return this.QuantidadeExecutadaField;
            }
            set {
                if ((this.QuantidadeExecutadaField.Equals(value) != true)) {
                    this.QuantidadeExecutadaField = value;
                    this.RaisePropertyChanged("QuantidadeExecutada");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Usuario {
            get {
                return this.UsuarioField;
            }
            set {
                if ((this.UsuarioField.Equals(value) != true)) {
                    this.UsuarioField = value;
                    this.RaisePropertyChanged("Usuario");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContaDemoDTO", Namespace="http://schemas.datacontract.org/2004/07/Traderdata.Server.App.TraderdataLite.DTO")]
    public partial class ContaDemoDTO : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int BrokerIdField;
        
        private string ComqueFrequenciaVocePretendeUsarNovaEstrategiaField;
        
        private string ConhecimentoSobreInvestimentosField;
        
        private int IdField;
        
        private string InvestimentosQueVoceJaTeveField;
        
        private string LoginField;
        
        private string OqueVoceFariaSeSuasAcoesCaissem20Field;
        
        private string PorQuantoTempoPretendeManterSeuInvestimentoField;
        
        private string QualASuaIdadeField;
        
        private string QualASuaToleranciaAoRiscoField;
        
        private string QualESeuObjetivoAoInvestirField;
        
        private string SenhaField;
        
        private int UsuarioIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BrokerId {
            get {
                return this.BrokerIdField;
            }
            set {
                if ((this.BrokerIdField.Equals(value) != true)) {
                    this.BrokerIdField = value;
                    this.RaisePropertyChanged("BrokerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ComqueFrequenciaVocePretendeUsarNovaEstrategia {
            get {
                return this.ComqueFrequenciaVocePretendeUsarNovaEstrategiaField;
            }
            set {
                if ((object.ReferenceEquals(this.ComqueFrequenciaVocePretendeUsarNovaEstrategiaField, value) != true)) {
                    this.ComqueFrequenciaVocePretendeUsarNovaEstrategiaField = value;
                    this.RaisePropertyChanged("ComqueFrequenciaVocePretendeUsarNovaEstrategia");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConhecimentoSobreInvestimentos {
            get {
                return this.ConhecimentoSobreInvestimentosField;
            }
            set {
                if ((object.ReferenceEquals(this.ConhecimentoSobreInvestimentosField, value) != true)) {
                    this.ConhecimentoSobreInvestimentosField = value;
                    this.RaisePropertyChanged("ConhecimentoSobreInvestimentos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvestimentosQueVoceJaTeve {
            get {
                return this.InvestimentosQueVoceJaTeveField;
            }
            set {
                if ((object.ReferenceEquals(this.InvestimentosQueVoceJaTeveField, value) != true)) {
                    this.InvestimentosQueVoceJaTeveField = value;
                    this.RaisePropertyChanged("InvestimentosQueVoceJaTeve");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OqueVoceFariaSeSuasAcoesCaissem20 {
            get {
                return this.OqueVoceFariaSeSuasAcoesCaissem20Field;
            }
            set {
                if ((object.ReferenceEquals(this.OqueVoceFariaSeSuasAcoesCaissem20Field, value) != true)) {
                    this.OqueVoceFariaSeSuasAcoesCaissem20Field = value;
                    this.RaisePropertyChanged("OqueVoceFariaSeSuasAcoesCaissem20");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PorQuantoTempoPretendeManterSeuInvestimento {
            get {
                return this.PorQuantoTempoPretendeManterSeuInvestimentoField;
            }
            set {
                if ((object.ReferenceEquals(this.PorQuantoTempoPretendeManterSeuInvestimentoField, value) != true)) {
                    this.PorQuantoTempoPretendeManterSeuInvestimentoField = value;
                    this.RaisePropertyChanged("PorQuantoTempoPretendeManterSeuInvestimento");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QualASuaIdade {
            get {
                return this.QualASuaIdadeField;
            }
            set {
                if ((object.ReferenceEquals(this.QualASuaIdadeField, value) != true)) {
                    this.QualASuaIdadeField = value;
                    this.RaisePropertyChanged("QualASuaIdade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QualASuaToleranciaAoRisco {
            get {
                return this.QualASuaToleranciaAoRiscoField;
            }
            set {
                if ((object.ReferenceEquals(this.QualASuaToleranciaAoRiscoField, value) != true)) {
                    this.QualASuaToleranciaAoRiscoField = value;
                    this.RaisePropertyChanged("QualASuaToleranciaAoRisco");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QualESeuObjetivoAoInvestir {
            get {
                return this.QualESeuObjetivoAoInvestirField;
            }
            set {
                if ((object.ReferenceEquals(this.QualESeuObjetivoAoInvestirField, value) != true)) {
                    this.QualESeuObjetivoAoInvestirField = value;
                    this.RaisePropertyChanged("QualESeuObjetivoAoInvestir");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Senha {
            get {
                return this.SenhaField;
            }
            set {
                if ((object.ReferenceEquals(this.SenhaField, value) != true)) {
                    this.SenhaField = value;
                    this.RaisePropertyChanged("Senha");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UsuarioId {
            get {
                return this.UsuarioIdField;
            }
            set {
                if ((this.UsuarioIdField.Equals(value) != true)) {
                    this.UsuarioIdField = value;
                    this.RaisePropertyChanged("UsuarioId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BrokerDTO", Namespace="http://schemas.datacontract.org/2004/07/Traderdata.Server.App.TraderdataLite.DTO")]
    public partial class BrokerDTO : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool ContaDemoField;
        
        private bool ContaLiveField;
        
        private double CorretagemFixaField;
        
        private int IdField;
        
        private string LinkOMSField;
        
        private string NomeField;
        
        private int PeriodoTrialBMFField;
        
        private int PeriodoTrialBovespaField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ContaDemo {
            get {
                return this.ContaDemoField;
            }
            set {
                if ((this.ContaDemoField.Equals(value) != true)) {
                    this.ContaDemoField = value;
                    this.RaisePropertyChanged("ContaDemo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ContaLive {
            get {
                return this.ContaLiveField;
            }
            set {
                if ((this.ContaLiveField.Equals(value) != true)) {
                    this.ContaLiveField = value;
                    this.RaisePropertyChanged("ContaLive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CorretagemFixa {
            get {
                return this.CorretagemFixaField;
            }
            set {
                if ((this.CorretagemFixaField.Equals(value) != true)) {
                    this.CorretagemFixaField = value;
                    this.RaisePropertyChanged("CorretagemFixa");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LinkOMS {
            get {
                return this.LinkOMSField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkOMSField, value) != true)) {
                    this.LinkOMSField = value;
                    this.RaisePropertyChanged("LinkOMS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nome {
            get {
                return this.NomeField;
            }
            set {
                if ((object.ReferenceEquals(this.NomeField, value) != true)) {
                    this.NomeField = value;
                    this.RaisePropertyChanged("Nome");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PeriodoTrialBMF {
            get {
                return this.PeriodoTrialBMFField;
            }
            set {
                if ((this.PeriodoTrialBMFField.Equals(value) != true)) {
                    this.PeriodoTrialBMFField = value;
                    this.RaisePropertyChanged("PeriodoTrialBMF");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PeriodoTrialBovespa {
            get {
                return this.PeriodoTrialBovespaField;
            }
            set {
                if ((this.PeriodoTrialBovespaField.Equals(value) != true)) {
                    this.PeriodoTrialBovespaField = value;
                    this.RaisePropertyChanged("PeriodoTrialBovespa");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UsuarioDTO", Namespace="http://schemas.datacontract.org/2004/07/Traderdata.Server.App.TraderdataLite.DTO")]
    public partial class UsuarioDTO : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime BMFRTField;
        
        private string BairroField;
        
        private System.DateTime BovespaRTField;
        
        private string CEPField;
        
        private string CPFField;
        
        private string CelularField;
        
        private string CidadeField;
        
        private string CorretoraField;
        
        private string EmailField;
        
        private string EnderecoField;
        
        private string EstadoField;
        
        private string GuidField;
        
        private bool HasBMFRTField;
        
        private bool HasBovespaRTField;
        
        private bool HasTrialField;
        
        private int IdField;
        
        private string NomeField;
        
        private string PaisField;
        
        private string PerfilField;
        
        private string RGField;
        
        private bool RoteamentoField;
        
        private string SenhaField;
        
        private string TelefoneField;
        
        private string TipoUsuarioField;
        
        private System.DateTime TrialField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BMFRT {
            get {
                return this.BMFRTField;
            }
            set {
                if ((this.BMFRTField.Equals(value) != true)) {
                    this.BMFRTField = value;
                    this.RaisePropertyChanged("BMFRT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Bairro {
            get {
                return this.BairroField;
            }
            set {
                if ((object.ReferenceEquals(this.BairroField, value) != true)) {
                    this.BairroField = value;
                    this.RaisePropertyChanged("Bairro");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BovespaRT {
            get {
                return this.BovespaRTField;
            }
            set {
                if ((this.BovespaRTField.Equals(value) != true)) {
                    this.BovespaRTField = value;
                    this.RaisePropertyChanged("BovespaRT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CEP {
            get {
                return this.CEPField;
            }
            set {
                if ((object.ReferenceEquals(this.CEPField, value) != true)) {
                    this.CEPField = value;
                    this.RaisePropertyChanged("CEP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CPF {
            get {
                return this.CPFField;
            }
            set {
                if ((object.ReferenceEquals(this.CPFField, value) != true)) {
                    this.CPFField = value;
                    this.RaisePropertyChanged("CPF");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Celular {
            get {
                return this.CelularField;
            }
            set {
                if ((object.ReferenceEquals(this.CelularField, value) != true)) {
                    this.CelularField = value;
                    this.RaisePropertyChanged("Celular");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cidade {
            get {
                return this.CidadeField;
            }
            set {
                if ((object.ReferenceEquals(this.CidadeField, value) != true)) {
                    this.CidadeField = value;
                    this.RaisePropertyChanged("Cidade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Corretora {
            get {
                return this.CorretoraField;
            }
            set {
                if ((object.ReferenceEquals(this.CorretoraField, value) != true)) {
                    this.CorretoraField = value;
                    this.RaisePropertyChanged("Corretora");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Endereco {
            get {
                return this.EnderecoField;
            }
            set {
                if ((object.ReferenceEquals(this.EnderecoField, value) != true)) {
                    this.EnderecoField = value;
                    this.RaisePropertyChanged("Endereco");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Estado {
            get {
                return this.EstadoField;
            }
            set {
                if ((object.ReferenceEquals(this.EstadoField, value) != true)) {
                    this.EstadoField = value;
                    this.RaisePropertyChanged("Estado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Guid {
            get {
                return this.GuidField;
            }
            set {
                if ((object.ReferenceEquals(this.GuidField, value) != true)) {
                    this.GuidField = value;
                    this.RaisePropertyChanged("Guid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasBMFRT {
            get {
                return this.HasBMFRTField;
            }
            set {
                if ((this.HasBMFRTField.Equals(value) != true)) {
                    this.HasBMFRTField = value;
                    this.RaisePropertyChanged("HasBMFRT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasBovespaRT {
            get {
                return this.HasBovespaRTField;
            }
            set {
                if ((this.HasBovespaRTField.Equals(value) != true)) {
                    this.HasBovespaRTField = value;
                    this.RaisePropertyChanged("HasBovespaRT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasTrial {
            get {
                return this.HasTrialField;
            }
            set {
                if ((this.HasTrialField.Equals(value) != true)) {
                    this.HasTrialField = value;
                    this.RaisePropertyChanged("HasTrial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nome {
            get {
                return this.NomeField;
            }
            set {
                if ((object.ReferenceEquals(this.NomeField, value) != true)) {
                    this.NomeField = value;
                    this.RaisePropertyChanged("Nome");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pais {
            get {
                return this.PaisField;
            }
            set {
                if ((object.ReferenceEquals(this.PaisField, value) != true)) {
                    this.PaisField = value;
                    this.RaisePropertyChanged("Pais");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Perfil {
            get {
                return this.PerfilField;
            }
            set {
                if ((object.ReferenceEquals(this.PerfilField, value) != true)) {
                    this.PerfilField = value;
                    this.RaisePropertyChanged("Perfil");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RG {
            get {
                return this.RGField;
            }
            set {
                if ((object.ReferenceEquals(this.RGField, value) != true)) {
                    this.RGField = value;
                    this.RaisePropertyChanged("RG");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Roteamento {
            get {
                return this.RoteamentoField;
            }
            set {
                if ((this.RoteamentoField.Equals(value) != true)) {
                    this.RoteamentoField = value;
                    this.RaisePropertyChanged("Roteamento");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Senha {
            get {
                return this.SenhaField;
            }
            set {
                if ((object.ReferenceEquals(this.SenhaField, value) != true)) {
                    this.SenhaField = value;
                    this.RaisePropertyChanged("Senha");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telefone {
            get {
                return this.TelefoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TelefoneField, value) != true)) {
                    this.TelefoneField = value;
                    this.RaisePropertyChanged("Telefone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TipoUsuario {
            get {
                return this.TipoUsuarioField;
            }
            set {
                if ((object.ReferenceEquals(this.TipoUsuarioField, value) != true)) {
                    this.TipoUsuarioField = value;
                    this.RaisePropertyChanged("TipoUsuario");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Trial {
            get {
                return this.TrialField;
            }
            set {
                if ((this.TrialField.Equals(value) != true)) {
                    this.TrialField = value;
                    this.RaisePropertyChanged("Trial");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExpertDTO", Namespace="http://schemas.datacontract.org/2004/07/Traderdata.Server.App.TraderdataLite.DTO")]
    public partial class ExpertDTO : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DescricaoField;
        
        private int IdField;
        
        private string NomeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Descricao {
            get {
                return this.DescricaoField;
            }
            set {
                if ((object.ReferenceEquals(this.DescricaoField, value) != true)) {
                    this.DescricaoField = value;
                    this.RaisePropertyChanged("Descricao");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nome {
            get {
                return this.NomeField;
            }
            set {
                if ((object.ReferenceEquals(this.NomeField, value) != true)) {
                    this.NomeField = value;
                    this.RaisePropertyChanged("Nome");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LiveAccountDTO", Namespace="http://schemas.datacontract.org/2004/07/Traderdata.Server.App.TraderdataLite.DTO")]
    public partial class LiveAccountDTO : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool AceitoContratoField;
        
        private int BrokerField;
        
        private string CBLCField;
        
        private int IdField;
        
        private bool OneClickField;
        
        private int UsuarioField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AceitoContrato {
            get {
                return this.AceitoContratoField;
            }
            set {
                if ((this.AceitoContratoField.Equals(value) != true)) {
                    this.AceitoContratoField = value;
                    this.RaisePropertyChanged("AceitoContrato");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Broker {
            get {
                return this.BrokerField;
            }
            set {
                if ((this.BrokerField.Equals(value) != true)) {
                    this.BrokerField = value;
                    this.RaisePropertyChanged("Broker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CBLC {
            get {
                return this.CBLCField;
            }
            set {
                if ((object.ReferenceEquals(this.CBLCField, value) != true)) {
                    this.CBLCField = value;
                    this.RaisePropertyChanged("CBLC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OneClick {
            get {
                return this.OneClickField;
            }
            set {
                if ((this.OneClickField.Equals(value) != true)) {
                    this.OneClickField = value;
                    this.RaisePropertyChanged("OneClick");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Usuario {
            get {
                return this.UsuarioField;
            }
            set {
                if ((this.UsuarioField.Equals(value) != true)) {
                    this.UsuarioField = value;
                    this.RaisePropertyChanged("Usuario");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TraderdataDesktop.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/UpdateNumeroVisualizacaoAnalise", ReplyAction="http://tempuri.org/IService/UpdateNumeroVisualizacaoAnaliseResponse")]
        System.IAsyncResult BeginUpdateNumeroVisualizacaoAnalise(Traderdata.Client.TerminalWEB.TraderdataDesktop.AnaliseDTO analise, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateNumeroVisualizacaoAnalise(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/InserirAnalise", ReplyAction="http://tempuri.org/IService/InserirAnaliseResponse")]
        System.IAsyncResult BeginInserirAnalise(Traderdata.Client.TerminalWEB.TraderdataDesktop.AnaliseDTO analise, System.AsyncCallback callback, object asyncState);
        
        void EndInserirAnalise(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/DeleteAnalise", ReplyAction="http://tempuri.org/IService/DeleteAnaliseResponse")]
        System.IAsyncResult BeginDeleteAnalise(Traderdata.Client.TerminalWEB.TraderdataDesktop.AnaliseDTO analise, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteAnalise(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/GetAllAnalises", ReplyAction="http://tempuri.org/IService/GetAllAnalisesResponse")]
        System.IAsyncResult BeginGetAllAnalises(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.AnaliseDTO> EndGetAllAnalises(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/GetAllLikes", ReplyAction="http://tempuri.org/IService/GetAllLikesResponse")]
        System.IAsyncResult BeginGetAllLikes(int usuario, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.LikeAnaliseDTO> EndGetAllLikes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/InsertLike", ReplyAction="http://tempuri.org/IService/InsertLikeResponse")]
        System.IAsyncResult BeginInsertLike(Traderdata.Client.TerminalWEB.TraderdataDesktop.LikeAnaliseDTO likeanalise, System.AsyncCallback callback, object asyncState);
        
        void EndInsertLike(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/GetLikeStat", ReplyAction="http://tempuri.org/IService/GetLikeStatResponse")]
        System.IAsyncResult BeginGetLikeStat(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.Dictionary<int, int> EndGetLikeStat(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/HabilitaDesabilitaAlera", ReplyAction="http://tempuri.org/IService/HabilitaDesabilitaAleraResponse")]
        System.IAsyncResult BeginHabilitaDesabilitaAlera(int alertaId, bool habilita, System.AsyncCallback callback, object asyncState);
        
        void EndHabilitaDesabilitaAlera(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/InserirAlerta", ReplyAction="http://tempuri.org/IService/InserirAlertaResponse")]
        System.IAsyncResult BeginInserirAlerta(Traderdata.Client.TerminalWEB.TraderdataDesktop.AlertaDTO alerta, System.AsyncCallback callback, object asyncState);
        
        void EndInserirAlerta(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/EditaComentario", ReplyAction="http://tempuri.org/IService/EditaComentarioResponse")]
        System.IAsyncResult BeginEditaComentario(Traderdata.Client.TerminalWEB.TraderdataDesktop.AlertaDTO alerta, System.AsyncCallback callback, object asyncState);
        
        void EndEditaComentario(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/ExcluirAlerta", ReplyAction="http://tempuri.org/IService/ExcluirAlertaResponse")]
        System.IAsyncResult BeginExcluirAlerta(Traderdata.Client.TerminalWEB.TraderdataDesktop.AlertaDTO alerta, System.AsyncCallback callback, object asyncState);
        
        void EndExcluirAlerta(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/GetAllAlertas", ReplyAction="http://tempuri.org/IService/GetAllAlertasResponse")]
        System.IAsyncResult BeginGetAllAlertas(int usuario, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.AlertaDTO> EndGetAllAlertas(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/InsereCarteira", ReplyAction="http://tempuri.org/IService/InsereCarteiraResponse")]
        System.IAsyncResult BeginInsereCarteira(Traderdata.Client.TerminalWEB.TraderdataDesktop.CarteiraDTO carteira, System.AsyncCallback callback, object asyncState);
        
        Traderdata.Client.TerminalWEB.TraderdataDesktop.CarteiraDTO EndInsereCarteira(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/ExcluiCarteira", ReplyAction="http://tempuri.org/IService/ExcluiCarteiraResponse")]
        System.IAsyncResult BeginExcluiCarteira(int id, System.AsyncCallback callback, object asyncState);
        
        void EndExcluiCarteira(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/EditaCarteira", ReplyAction="http://tempuri.org/IService/EditaCarteiraResponse")]
        System.IAsyncResult BeginEditaCarteira(Traderdata.Client.TerminalWEB.TraderdataDesktop.CarteiraDTO carteira, System.AsyncCallback callback, object asyncState);
        
        void EndEditaCarteira(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/RetornaCarteiraPorId", ReplyAction="http://tempuri.org/IService/RetornaCarteiraPorIdResponse")]
        System.IAsyncResult BeginRetornaCarteiraPorId(int id, System.AsyncCallback callback, object asyncState);
        
        Traderdata.Client.TerminalWEB.TraderdataDesktop.CarteiraDTO EndRetornaCarteiraPorId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/RetornaCarteirasPorUsuario", ReplyAction="http://tempuri.org/IService/RetornaCarteirasPorUsuarioResponse")]
        System.IAsyncResult BeginRetornaCarteirasPorUsuario(int idUsuario, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.CarteiraDTO> EndRetornaCarteirasPorUsuario(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/InserirOrder", ReplyAction="http://tempuri.org/IService/InserirOrderResponse")]
        System.IAsyncResult BeginInserirOrder(Traderdata.Client.TerminalWEB.TraderdataDesktop.OrderDTO ordem, System.AsyncCallback callback, object asyncState);
        
        void EndInserirOrder(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/GetAllOrders", ReplyAction="http://tempuri.org/IService/GetAllOrdersResponse")]
        System.IAsyncResult BeginGetAllOrders(int idUsuario, int idLastOrder, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.OrderDTO> EndGetAllOrders(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/GetLastVersion", ReplyAction="http://tempuri.org/IService/GetLastVersionResponse")]
        System.IAsyncResult BeginGetLastVersion(System.AsyncCallback callback, object asyncState);
        
        int EndGetLastVersion(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/GetWebfeederServer", ReplyAction="http://tempuri.org/IService/GetWebfeederServerResponse")]
        System.IAsyncResult BeginGetWebfeederServer(System.AsyncCallback callback, object asyncState);
        
        string EndGetWebfeederServer(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/ReturnClientIP", ReplyAction="http://tempuri.org/IService/ReturnClientIPResponse")]
        System.IAsyncResult BeginReturnClientIP(System.AsyncCallback callback, object asyncState);
        
        string EndReturnClientIP(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/InserirContaDemo", ReplyAction="http://tempuri.org/IService/InserirContaDemoResponse")]
        System.IAsyncResult BeginInserirContaDemo(Traderdata.Client.TerminalWEB.TraderdataDesktop.ContaDemoDTO contaDemo, System.AsyncCallback callback, object asyncState);
        
        void EndInserirContaDemo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/GetContasDemo", ReplyAction="http://tempuri.org/IService/GetContasDemoResponse")]
        System.IAsyncResult BeginGetContasDemo(int usuarioId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.ContaDemoDTO> EndGetContasDemo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/GetBrokers", ReplyAction="http://tempuri.org/IService/GetBrokersResponse")]
        System.IAsyncResult BeginGetBrokers(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.BrokerDTO> EndGetBrokers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/Login", ReplyAction="http://tempuri.org/IService/LoginResponse")]
        System.IAsyncResult BeginLogin(string login, string senha, System.AsyncCallback callback, object asyncState);
        
        Traderdata.Client.TerminalWEB.TraderdataDesktop.UsuarioDTO EndLogin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/GetLoginByCPF", ReplyAction="http://tempuri.org/IService/GetLoginByCPFResponse")]
        System.IAsyncResult BeginGetLoginByCPF(string cpf, System.AsyncCallback callback, object asyncState);
        
        string EndGetLoginByCPF(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/ReenviaSenhaPorCPF", ReplyAction="http://tempuri.org/IService/ReenviaSenhaPorCPFResponse")]
        System.IAsyncResult BeginReenviaSenhaPorCPF(string cpf, System.AsyncCallback callback, object asyncState);
        
        bool EndReenviaSenhaPorCPF(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/ReenviaSenhaPorLogin", ReplyAction="http://tempuri.org/IService/ReenviaSenhaPorLoginResponse")]
        System.IAsyncResult BeginReenviaSenhaPorLogin(string login, System.AsyncCallback callback, object asyncState);
        
        bool EndReenviaSenhaPorLogin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/InserirUsuario", ReplyAction="http://tempuri.org/IService/InserirUsuarioResponse")]
        System.IAsyncResult BeginInserirUsuario(Traderdata.Client.TerminalWEB.TraderdataDesktop.UsuarioDTO usuario, System.AsyncCallback callback, object asyncState);
        
        void EndInserirUsuario(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/InserirUsuarioIntegracaoCorretora", ReplyAction="http://tempuri.org/IService/InserirUsuarioIntegracaoCorretoraResponse")]
        System.IAsyncResult BeginInserirUsuarioIntegracaoCorretora(Traderdata.Client.TerminalWEB.TraderdataDesktop.UsuarioDTO usuario, System.AsyncCallback callback, object asyncState);
        
        void EndInserirUsuarioIntegracaoCorretora(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/ExisteCPF", ReplyAction="http://tempuri.org/IService/ExisteCPFResponse")]
        System.IAsyncResult BeginExisteCPF(string cpf, System.AsyncCallback callback, object asyncState);
        
        bool EndExisteCPF(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/ExisteEmail", ReplyAction="http://tempuri.org/IService/ExisteEmailResponse")]
        System.IAsyncResult BeginExisteEmail(string email, System.AsyncCallback callback, object asyncState);
        
        bool EndExisteEmail(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/GetTokenByUserLogin", ReplyAction="http://tempuri.org/IService/GetTokenByUserLoginResponse")]
        System.IAsyncResult BeginGetTokenByUserLogin(string login, System.AsyncCallback callback, object asyncState);
        
        string EndGetTokenByUserLogin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/RefreshTokenByUserLogin", ReplyAction="http://tempuri.org/IService/RefreshTokenByUserLoginResponse")]
        System.IAsyncResult BeginRefreshTokenByUserLogin(string login, System.AsyncCallback callback, object asyncState);
        
        string EndRefreshTokenByUserLogin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/ValidateToken", ReplyAction="http://tempuri.org/IService/ValidateTokenResponse")]
        System.IAsyncResult BeginValidateToken(string token, string login, System.AsyncCallback callback, object asyncState);
        
        bool EndValidateToken(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/GetExchangesUserHasAccess", ReplyAction="http://tempuri.org/IService/GetExchangesUserHasAccessResponse")]
        System.IAsyncResult BeginGetExchangesUserHasAccess(string login, System.AsyncCallback callback, object asyncState);
        
        string EndGetExchangesUserHasAccess(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/GetExperts", ReplyAction="http://tempuri.org/IService/GetExpertsResponse")]
        System.IAsyncResult BeginGetExperts(int idUsuario, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.ExpertDTO> EndGetExperts(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/InsertLiveAccount", ReplyAction="http://tempuri.org/IService/InsertLiveAccountResponse")]
        System.IAsyncResult BeginInsertLiveAccount(Traderdata.Client.TerminalWEB.TraderdataDesktop.LiveAccountDTO liveAccount, System.AsyncCallback callback, object asyncState);
        
        void EndInsertLiveAccount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/GetLiveAccounts", ReplyAction="http://tempuri.org/IService/GetLiveAccountsResponse")]
        System.IAsyncResult BeginGetLiveAccounts(int usuario, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.LiveAccountDTO> EndGetLiveAccounts(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : Traderdata.Client.TerminalWEB.TraderdataDesktop.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllAnalisesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllAnalisesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.AnaliseDTO> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.AnaliseDTO>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllLikesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllLikesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.LikeAnaliseDTO> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.LikeAnaliseDTO>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLikeStatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLikeStatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.Dictionary<int, int> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.Dictionary<int, int>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllAlertasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllAlertasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.AlertaDTO> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.AlertaDTO>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsereCarteiraCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsereCarteiraCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Traderdata.Client.TerminalWEB.TraderdataDesktop.CarteiraDTO Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Traderdata.Client.TerminalWEB.TraderdataDesktop.CarteiraDTO)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetornaCarteiraPorIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetornaCarteiraPorIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Traderdata.Client.TerminalWEB.TraderdataDesktop.CarteiraDTO Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Traderdata.Client.TerminalWEB.TraderdataDesktop.CarteiraDTO)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetornaCarteirasPorUsuarioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetornaCarteirasPorUsuarioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.CarteiraDTO> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.CarteiraDTO>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllOrdersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllOrdersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.OrderDTO> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.OrderDTO>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLastVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLastVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetWebfeederServerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetWebfeederServerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReturnClientIPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReturnClientIPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetContasDemoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetContasDemoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.ContaDemoDTO> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.ContaDemoDTO>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBrokersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBrokersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.BrokerDTO> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.BrokerDTO>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Traderdata.Client.TerminalWEB.TraderdataDesktop.UsuarioDTO Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Traderdata.Client.TerminalWEB.TraderdataDesktop.UsuarioDTO)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLoginByCPFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLoginByCPFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReenviaSenhaPorCPFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReenviaSenhaPorCPFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReenviaSenhaPorLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReenviaSenhaPorLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExisteCPFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ExisteCPFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExisteEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ExisteEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTokenByUserLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTokenByUserLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RefreshTokenByUserLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RefreshTokenByUserLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ValidateTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ValidateTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetExchangesUserHasAccessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetExchangesUserHasAccessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetExpertsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetExpertsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.ExpertDTO> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.ExpertDTO>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLiveAccountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLiveAccountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.LiveAccountDTO> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.LiveAccountDTO>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<Traderdata.Client.TerminalWEB.TraderdataDesktop.IService>, Traderdata.Client.TerminalWEB.TraderdataDesktop.IService {
        
        private BeginOperationDelegate onBeginUpdateNumeroVisualizacaoAnaliseDelegate;
        
        private EndOperationDelegate onEndUpdateNumeroVisualizacaoAnaliseDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateNumeroVisualizacaoAnaliseCompletedDelegate;
        
        private BeginOperationDelegate onBeginInserirAnaliseDelegate;
        
        private EndOperationDelegate onEndInserirAnaliseDelegate;
        
        private System.Threading.SendOrPostCallback onInserirAnaliseCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteAnaliseDelegate;
        
        private EndOperationDelegate onEndDeleteAnaliseDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteAnaliseCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllAnalisesDelegate;
        
        private EndOperationDelegate onEndGetAllAnalisesDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllAnalisesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllLikesDelegate;
        
        private EndOperationDelegate onEndGetAllLikesDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllLikesCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertLikeDelegate;
        
        private EndOperationDelegate onEndInsertLikeDelegate;
        
        private System.Threading.SendOrPostCallback onInsertLikeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLikeStatDelegate;
        
        private EndOperationDelegate onEndGetLikeStatDelegate;
        
        private System.Threading.SendOrPostCallback onGetLikeStatCompletedDelegate;
        
        private BeginOperationDelegate onBeginHabilitaDesabilitaAleraDelegate;
        
        private EndOperationDelegate onEndHabilitaDesabilitaAleraDelegate;
        
        private System.Threading.SendOrPostCallback onHabilitaDesabilitaAleraCompletedDelegate;
        
        private BeginOperationDelegate onBeginInserirAlertaDelegate;
        
        private EndOperationDelegate onEndInserirAlertaDelegate;
        
        private System.Threading.SendOrPostCallback onInserirAlertaCompletedDelegate;
        
        private BeginOperationDelegate onBeginEditaComentarioDelegate;
        
        private EndOperationDelegate onEndEditaComentarioDelegate;
        
        private System.Threading.SendOrPostCallback onEditaComentarioCompletedDelegate;
        
        private BeginOperationDelegate onBeginExcluirAlertaDelegate;
        
        private EndOperationDelegate onEndExcluirAlertaDelegate;
        
        private System.Threading.SendOrPostCallback onExcluirAlertaCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllAlertasDelegate;
        
        private EndOperationDelegate onEndGetAllAlertasDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllAlertasCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsereCarteiraDelegate;
        
        private EndOperationDelegate onEndInsereCarteiraDelegate;
        
        private System.Threading.SendOrPostCallback onInsereCarteiraCompletedDelegate;
        
        private BeginOperationDelegate onBeginExcluiCarteiraDelegate;
        
        private EndOperationDelegate onEndExcluiCarteiraDelegate;
        
        private System.Threading.SendOrPostCallback onExcluiCarteiraCompletedDelegate;
        
        private BeginOperationDelegate onBeginEditaCarteiraDelegate;
        
        private EndOperationDelegate onEndEditaCarteiraDelegate;
        
        private System.Threading.SendOrPostCallback onEditaCarteiraCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetornaCarteiraPorIdDelegate;
        
        private EndOperationDelegate onEndRetornaCarteiraPorIdDelegate;
        
        private System.Threading.SendOrPostCallback onRetornaCarteiraPorIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetornaCarteirasPorUsuarioDelegate;
        
        private EndOperationDelegate onEndRetornaCarteirasPorUsuarioDelegate;
        
        private System.Threading.SendOrPostCallback onRetornaCarteirasPorUsuarioCompletedDelegate;
        
        private BeginOperationDelegate onBeginInserirOrderDelegate;
        
        private EndOperationDelegate onEndInserirOrderDelegate;
        
        private System.Threading.SendOrPostCallback onInserirOrderCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllOrdersDelegate;
        
        private EndOperationDelegate onEndGetAllOrdersDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllOrdersCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLastVersionDelegate;
        
        private EndOperationDelegate onEndGetLastVersionDelegate;
        
        private System.Threading.SendOrPostCallback onGetLastVersionCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetWebfeederServerDelegate;
        
        private EndOperationDelegate onEndGetWebfeederServerDelegate;
        
        private System.Threading.SendOrPostCallback onGetWebfeederServerCompletedDelegate;
        
        private BeginOperationDelegate onBeginReturnClientIPDelegate;
        
        private EndOperationDelegate onEndReturnClientIPDelegate;
        
        private System.Threading.SendOrPostCallback onReturnClientIPCompletedDelegate;
        
        private BeginOperationDelegate onBeginInserirContaDemoDelegate;
        
        private EndOperationDelegate onEndInserirContaDemoDelegate;
        
        private System.Threading.SendOrPostCallback onInserirContaDemoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetContasDemoDelegate;
        
        private EndOperationDelegate onEndGetContasDemoDelegate;
        
        private System.Threading.SendOrPostCallback onGetContasDemoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetBrokersDelegate;
        
        private EndOperationDelegate onEndGetBrokersDelegate;
        
        private System.Threading.SendOrPostCallback onGetBrokersCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoginDelegate;
        
        private EndOperationDelegate onEndLoginDelegate;
        
        private System.Threading.SendOrPostCallback onLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLoginByCPFDelegate;
        
        private EndOperationDelegate onEndGetLoginByCPFDelegate;
        
        private System.Threading.SendOrPostCallback onGetLoginByCPFCompletedDelegate;
        
        private BeginOperationDelegate onBeginReenviaSenhaPorCPFDelegate;
        
        private EndOperationDelegate onEndReenviaSenhaPorCPFDelegate;
        
        private System.Threading.SendOrPostCallback onReenviaSenhaPorCPFCompletedDelegate;
        
        private BeginOperationDelegate onBeginReenviaSenhaPorLoginDelegate;
        
        private EndOperationDelegate onEndReenviaSenhaPorLoginDelegate;
        
        private System.Threading.SendOrPostCallback onReenviaSenhaPorLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginInserirUsuarioDelegate;
        
        private EndOperationDelegate onEndInserirUsuarioDelegate;
        
        private System.Threading.SendOrPostCallback onInserirUsuarioCompletedDelegate;
        
        private BeginOperationDelegate onBeginInserirUsuarioIntegracaoCorretoraDelegate;
        
        private EndOperationDelegate onEndInserirUsuarioIntegracaoCorretoraDelegate;
        
        private System.Threading.SendOrPostCallback onInserirUsuarioIntegracaoCorretoraCompletedDelegate;
        
        private BeginOperationDelegate onBeginExisteCPFDelegate;
        
        private EndOperationDelegate onEndExisteCPFDelegate;
        
        private System.Threading.SendOrPostCallback onExisteCPFCompletedDelegate;
        
        private BeginOperationDelegate onBeginExisteEmailDelegate;
        
        private EndOperationDelegate onEndExisteEmailDelegate;
        
        private System.Threading.SendOrPostCallback onExisteEmailCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTokenByUserLoginDelegate;
        
        private EndOperationDelegate onEndGetTokenByUserLoginDelegate;
        
        private System.Threading.SendOrPostCallback onGetTokenByUserLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginRefreshTokenByUserLoginDelegate;
        
        private EndOperationDelegate onEndRefreshTokenByUserLoginDelegate;
        
        private System.Threading.SendOrPostCallback onRefreshTokenByUserLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginValidateTokenDelegate;
        
        private EndOperationDelegate onEndValidateTokenDelegate;
        
        private System.Threading.SendOrPostCallback onValidateTokenCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetExchangesUserHasAccessDelegate;
        
        private EndOperationDelegate onEndGetExchangesUserHasAccessDelegate;
        
        private System.Threading.SendOrPostCallback onGetExchangesUserHasAccessCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetExpertsDelegate;
        
        private EndOperationDelegate onEndGetExpertsDelegate;
        
        private System.Threading.SendOrPostCallback onGetExpertsCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertLiveAccountDelegate;
        
        private EndOperationDelegate onEndInsertLiveAccountDelegate;
        
        private System.Threading.SendOrPostCallback onInsertLiveAccountCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLiveAccountsDelegate;
        
        private EndOperationDelegate onEndGetLiveAccountsDelegate;
        
        private System.Threading.SendOrPostCallback onGetLiveAccountsCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateNumeroVisualizacaoAnaliseCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InserirAnaliseCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteAnaliseCompleted;
        
        public event System.EventHandler<GetAllAnalisesCompletedEventArgs> GetAllAnalisesCompleted;
        
        public event System.EventHandler<GetAllLikesCompletedEventArgs> GetAllLikesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertLikeCompleted;
        
        public event System.EventHandler<GetLikeStatCompletedEventArgs> GetLikeStatCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> HabilitaDesabilitaAleraCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InserirAlertaCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> EditaComentarioCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ExcluirAlertaCompleted;
        
        public event System.EventHandler<GetAllAlertasCompletedEventArgs> GetAllAlertasCompleted;
        
        public event System.EventHandler<InsereCarteiraCompletedEventArgs> InsereCarteiraCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ExcluiCarteiraCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> EditaCarteiraCompleted;
        
        public event System.EventHandler<RetornaCarteiraPorIdCompletedEventArgs> RetornaCarteiraPorIdCompleted;
        
        public event System.EventHandler<RetornaCarteirasPorUsuarioCompletedEventArgs> RetornaCarteirasPorUsuarioCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InserirOrderCompleted;
        
        public event System.EventHandler<GetAllOrdersCompletedEventArgs> GetAllOrdersCompleted;
        
        public event System.EventHandler<GetLastVersionCompletedEventArgs> GetLastVersionCompleted;
        
        public event System.EventHandler<GetWebfeederServerCompletedEventArgs> GetWebfeederServerCompleted;
        
        public event System.EventHandler<ReturnClientIPCompletedEventArgs> ReturnClientIPCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InserirContaDemoCompleted;
        
        public event System.EventHandler<GetContasDemoCompletedEventArgs> GetContasDemoCompleted;
        
        public event System.EventHandler<GetBrokersCompletedEventArgs> GetBrokersCompleted;
        
        public event System.EventHandler<LoginCompletedEventArgs> LoginCompleted;
        
        public event System.EventHandler<GetLoginByCPFCompletedEventArgs> GetLoginByCPFCompleted;
        
        public event System.EventHandler<ReenviaSenhaPorCPFCompletedEventArgs> ReenviaSenhaPorCPFCompleted;
        
        public event System.EventHandler<ReenviaSenhaPorLoginCompletedEventArgs> ReenviaSenhaPorLoginCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InserirUsuarioCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InserirUsuarioIntegracaoCorretoraCompleted;
        
        public event System.EventHandler<ExisteCPFCompletedEventArgs> ExisteCPFCompleted;
        
        public event System.EventHandler<ExisteEmailCompletedEventArgs> ExisteEmailCompleted;
        
        public event System.EventHandler<GetTokenByUserLoginCompletedEventArgs> GetTokenByUserLoginCompleted;
        
        public event System.EventHandler<RefreshTokenByUserLoginCompletedEventArgs> RefreshTokenByUserLoginCompleted;
        
        public event System.EventHandler<ValidateTokenCompletedEventArgs> ValidateTokenCompleted;
        
        public event System.EventHandler<GetExchangesUserHasAccessCompletedEventArgs> GetExchangesUserHasAccessCompleted;
        
        public event System.EventHandler<GetExpertsCompletedEventArgs> GetExpertsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertLiveAccountCompleted;
        
        public event System.EventHandler<GetLiveAccountsCompletedEventArgs> GetLiveAccountsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.BeginUpdateNumeroVisualizacaoAnalise(Traderdata.Client.TerminalWEB.TraderdataDesktop.AnaliseDTO analise, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateNumeroVisualizacaoAnalise(analise, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.EndUpdateNumeroVisualizacaoAnalise(System.IAsyncResult result) {
            base.Channel.EndUpdateNumeroVisualizacaoAnalise(result);
        }
        
        private System.IAsyncResult OnBeginUpdateNumeroVisualizacaoAnalise(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Traderdata.Client.TerminalWEB.TraderdataDesktop.AnaliseDTO analise = ((Traderdata.Client.TerminalWEB.TraderdataDesktop.AnaliseDTO)(inValues[0]));
            return ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).BeginUpdateNumeroVisualizacaoAnalise(analise, callback, asyncState);
        }
        
        private object[] OnEndUpdateNumeroVisualizacaoAnalise(System.IAsyncResult result) {
            ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).EndUpdateNumeroVisualizacaoAnalise(result);
            return null;
        }
        
        private void OnUpdateNumeroVisualizacaoAnaliseCompleted(object state) {
            if ((this.UpdateNumeroVisualizacaoAnaliseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateNumeroVisualizacaoAnaliseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateNumeroVisualizacaoAnaliseAsync(Traderdata.Client.TerminalWEB.TraderdataDesktop.AnaliseDTO analise) {
            this.UpdateNumeroVisualizacaoAnaliseAsync(analise, null);
        }
        
        public void UpdateNumeroVisualizacaoAnaliseAsync(Traderdata.Client.TerminalWEB.TraderdataDesktop.AnaliseDTO analise, object userState) {
            if ((this.onBeginUpdateNumeroVisualizacaoAnaliseDelegate == null)) {
                this.onBeginUpdateNumeroVisualizacaoAnaliseDelegate = new BeginOperationDelegate(this.OnBeginUpdateNumeroVisualizacaoAnalise);
            }
            if ((this.onEndUpdateNumeroVisualizacaoAnaliseDelegate == null)) {
                this.onEndUpdateNumeroVisualizacaoAnaliseDelegate = new EndOperationDelegate(this.OnEndUpdateNumeroVisualizacaoAnalise);
            }
            if ((this.onUpdateNumeroVisualizacaoAnaliseCompletedDelegate == null)) {
                this.onUpdateNumeroVisualizacaoAnaliseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateNumeroVisualizacaoAnaliseCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateNumeroVisualizacaoAnaliseDelegate, new object[] {
                        analise}, this.onEndUpdateNumeroVisualizacaoAnaliseDelegate, this.onUpdateNumeroVisualizacaoAnaliseCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.BeginInserirAnalise(Traderdata.Client.TerminalWEB.TraderdataDesktop.AnaliseDTO analise, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInserirAnalise(analise, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.EndInserirAnalise(System.IAsyncResult result) {
            base.Channel.EndInserirAnalise(result);
        }
        
        private System.IAsyncResult OnBeginInserirAnalise(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Traderdata.Client.TerminalWEB.TraderdataDesktop.AnaliseDTO analise = ((Traderdata.Client.TerminalWEB.TraderdataDesktop.AnaliseDTO)(inValues[0]));
            return ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).BeginInserirAnalise(analise, callback, asyncState);
        }
        
        private object[] OnEndInserirAnalise(System.IAsyncResult result) {
            ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).EndInserirAnalise(result);
            return null;
        }
        
        private void OnInserirAnaliseCompleted(object state) {
            if ((this.InserirAnaliseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InserirAnaliseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InserirAnaliseAsync(Traderdata.Client.TerminalWEB.TraderdataDesktop.AnaliseDTO analise) {
            this.InserirAnaliseAsync(analise, null);
        }
        
        public void InserirAnaliseAsync(Traderdata.Client.TerminalWEB.TraderdataDesktop.AnaliseDTO analise, object userState) {
            if ((this.onBeginInserirAnaliseDelegate == null)) {
                this.onBeginInserirAnaliseDelegate = new BeginOperationDelegate(this.OnBeginInserirAnalise);
            }
            if ((this.onEndInserirAnaliseDelegate == null)) {
                this.onEndInserirAnaliseDelegate = new EndOperationDelegate(this.OnEndInserirAnalise);
            }
            if ((this.onInserirAnaliseCompletedDelegate == null)) {
                this.onInserirAnaliseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInserirAnaliseCompleted);
            }
            base.InvokeAsync(this.onBeginInserirAnaliseDelegate, new object[] {
                        analise}, this.onEndInserirAnaliseDelegate, this.onInserirAnaliseCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.BeginDeleteAnalise(Traderdata.Client.TerminalWEB.TraderdataDesktop.AnaliseDTO analise, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteAnalise(analise, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.EndDeleteAnalise(System.IAsyncResult result) {
            base.Channel.EndDeleteAnalise(result);
        }
        
        private System.IAsyncResult OnBeginDeleteAnalise(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Traderdata.Client.TerminalWEB.TraderdataDesktop.AnaliseDTO analise = ((Traderdata.Client.TerminalWEB.TraderdataDesktop.AnaliseDTO)(inValues[0]));
            return ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).BeginDeleteAnalise(analise, callback, asyncState);
        }
        
        private object[] OnEndDeleteAnalise(System.IAsyncResult result) {
            ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).EndDeleteAnalise(result);
            return null;
        }
        
        private void OnDeleteAnaliseCompleted(object state) {
            if ((this.DeleteAnaliseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteAnaliseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteAnaliseAsync(Traderdata.Client.TerminalWEB.TraderdataDesktop.AnaliseDTO analise) {
            this.DeleteAnaliseAsync(analise, null);
        }
        
        public void DeleteAnaliseAsync(Traderdata.Client.TerminalWEB.TraderdataDesktop.AnaliseDTO analise, object userState) {
            if ((this.onBeginDeleteAnaliseDelegate == null)) {
                this.onBeginDeleteAnaliseDelegate = new BeginOperationDelegate(this.OnBeginDeleteAnalise);
            }
            if ((this.onEndDeleteAnaliseDelegate == null)) {
                this.onEndDeleteAnaliseDelegate = new EndOperationDelegate(this.OnEndDeleteAnalise);
            }
            if ((this.onDeleteAnaliseCompletedDelegate == null)) {
                this.onDeleteAnaliseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteAnaliseCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteAnaliseDelegate, new object[] {
                        analise}, this.onEndDeleteAnaliseDelegate, this.onDeleteAnaliseCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.BeginGetAllAnalises(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllAnalises(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.AnaliseDTO> Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.EndGetAllAnalises(System.IAsyncResult result) {
            return base.Channel.EndGetAllAnalises(result);
        }
        
        private System.IAsyncResult OnBeginGetAllAnalises(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).BeginGetAllAnalises(callback, asyncState);
        }
        
        private object[] OnEndGetAllAnalises(System.IAsyncResult result) {
            System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.AnaliseDTO> retVal = ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).EndGetAllAnalises(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllAnalisesCompleted(object state) {
            if ((this.GetAllAnalisesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllAnalisesCompleted(this, new GetAllAnalisesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllAnalisesAsync() {
            this.GetAllAnalisesAsync(null);
        }
        
        public void GetAllAnalisesAsync(object userState) {
            if ((this.onBeginGetAllAnalisesDelegate == null)) {
                this.onBeginGetAllAnalisesDelegate = new BeginOperationDelegate(this.OnBeginGetAllAnalises);
            }
            if ((this.onEndGetAllAnalisesDelegate == null)) {
                this.onEndGetAllAnalisesDelegate = new EndOperationDelegate(this.OnEndGetAllAnalises);
            }
            if ((this.onGetAllAnalisesCompletedDelegate == null)) {
                this.onGetAllAnalisesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllAnalisesCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllAnalisesDelegate, null, this.onEndGetAllAnalisesDelegate, this.onGetAllAnalisesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.BeginGetAllLikes(int usuario, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllLikes(usuario, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.LikeAnaliseDTO> Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.EndGetAllLikes(System.IAsyncResult result) {
            return base.Channel.EndGetAllLikes(result);
        }
        
        private System.IAsyncResult OnBeginGetAllLikes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int usuario = ((int)(inValues[0]));
            return ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).BeginGetAllLikes(usuario, callback, asyncState);
        }
        
        private object[] OnEndGetAllLikes(System.IAsyncResult result) {
            System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.LikeAnaliseDTO> retVal = ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).EndGetAllLikes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllLikesCompleted(object state) {
            if ((this.GetAllLikesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllLikesCompleted(this, new GetAllLikesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllLikesAsync(int usuario) {
            this.GetAllLikesAsync(usuario, null);
        }
        
        public void GetAllLikesAsync(int usuario, object userState) {
            if ((this.onBeginGetAllLikesDelegate == null)) {
                this.onBeginGetAllLikesDelegate = new BeginOperationDelegate(this.OnBeginGetAllLikes);
            }
            if ((this.onEndGetAllLikesDelegate == null)) {
                this.onEndGetAllLikesDelegate = new EndOperationDelegate(this.OnEndGetAllLikes);
            }
            if ((this.onGetAllLikesCompletedDelegate == null)) {
                this.onGetAllLikesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllLikesCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllLikesDelegate, new object[] {
                        usuario}, this.onEndGetAllLikesDelegate, this.onGetAllLikesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.BeginInsertLike(Traderdata.Client.TerminalWEB.TraderdataDesktop.LikeAnaliseDTO likeanalise, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertLike(likeanalise, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.EndInsertLike(System.IAsyncResult result) {
            base.Channel.EndInsertLike(result);
        }
        
        private System.IAsyncResult OnBeginInsertLike(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Traderdata.Client.TerminalWEB.TraderdataDesktop.LikeAnaliseDTO likeanalise = ((Traderdata.Client.TerminalWEB.TraderdataDesktop.LikeAnaliseDTO)(inValues[0]));
            return ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).BeginInsertLike(likeanalise, callback, asyncState);
        }
        
        private object[] OnEndInsertLike(System.IAsyncResult result) {
            ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).EndInsertLike(result);
            return null;
        }
        
        private void OnInsertLikeCompleted(object state) {
            if ((this.InsertLikeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertLikeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertLikeAsync(Traderdata.Client.TerminalWEB.TraderdataDesktop.LikeAnaliseDTO likeanalise) {
            this.InsertLikeAsync(likeanalise, null);
        }
        
        public void InsertLikeAsync(Traderdata.Client.TerminalWEB.TraderdataDesktop.LikeAnaliseDTO likeanalise, object userState) {
            if ((this.onBeginInsertLikeDelegate == null)) {
                this.onBeginInsertLikeDelegate = new BeginOperationDelegate(this.OnBeginInsertLike);
            }
            if ((this.onEndInsertLikeDelegate == null)) {
                this.onEndInsertLikeDelegate = new EndOperationDelegate(this.OnEndInsertLike);
            }
            if ((this.onInsertLikeCompletedDelegate == null)) {
                this.onInsertLikeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertLikeCompleted);
            }
            base.InvokeAsync(this.onBeginInsertLikeDelegate, new object[] {
                        likeanalise}, this.onEndInsertLikeDelegate, this.onInsertLikeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.BeginGetLikeStat(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLikeStat(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.Dictionary<int, int> Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.EndGetLikeStat(System.IAsyncResult result) {
            return base.Channel.EndGetLikeStat(result);
        }
        
        private System.IAsyncResult OnBeginGetLikeStat(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).BeginGetLikeStat(callback, asyncState);
        }
        
        private object[] OnEndGetLikeStat(System.IAsyncResult result) {
            System.Collections.Generic.Dictionary<int, int> retVal = ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).EndGetLikeStat(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLikeStatCompleted(object state) {
            if ((this.GetLikeStatCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLikeStatCompleted(this, new GetLikeStatCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLikeStatAsync() {
            this.GetLikeStatAsync(null);
        }
        
        public void GetLikeStatAsync(object userState) {
            if ((this.onBeginGetLikeStatDelegate == null)) {
                this.onBeginGetLikeStatDelegate = new BeginOperationDelegate(this.OnBeginGetLikeStat);
            }
            if ((this.onEndGetLikeStatDelegate == null)) {
                this.onEndGetLikeStatDelegate = new EndOperationDelegate(this.OnEndGetLikeStat);
            }
            if ((this.onGetLikeStatCompletedDelegate == null)) {
                this.onGetLikeStatCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLikeStatCompleted);
            }
            base.InvokeAsync(this.onBeginGetLikeStatDelegate, null, this.onEndGetLikeStatDelegate, this.onGetLikeStatCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.BeginHabilitaDesabilitaAlera(int alertaId, bool habilita, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginHabilitaDesabilitaAlera(alertaId, habilita, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.EndHabilitaDesabilitaAlera(System.IAsyncResult result) {
            base.Channel.EndHabilitaDesabilitaAlera(result);
        }
        
        private System.IAsyncResult OnBeginHabilitaDesabilitaAlera(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int alertaId = ((int)(inValues[0]));
            bool habilita = ((bool)(inValues[1]));
            return ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).BeginHabilitaDesabilitaAlera(alertaId, habilita, callback, asyncState);
        }
        
        private object[] OnEndHabilitaDesabilitaAlera(System.IAsyncResult result) {
            ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).EndHabilitaDesabilitaAlera(result);
            return null;
        }
        
        private void OnHabilitaDesabilitaAleraCompleted(object state) {
            if ((this.HabilitaDesabilitaAleraCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.HabilitaDesabilitaAleraCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void HabilitaDesabilitaAleraAsync(int alertaId, bool habilita) {
            this.HabilitaDesabilitaAleraAsync(alertaId, habilita, null);
        }
        
        public void HabilitaDesabilitaAleraAsync(int alertaId, bool habilita, object userState) {
            if ((this.onBeginHabilitaDesabilitaAleraDelegate == null)) {
                this.onBeginHabilitaDesabilitaAleraDelegate = new BeginOperationDelegate(this.OnBeginHabilitaDesabilitaAlera);
            }
            if ((this.onEndHabilitaDesabilitaAleraDelegate == null)) {
                this.onEndHabilitaDesabilitaAleraDelegate = new EndOperationDelegate(this.OnEndHabilitaDesabilitaAlera);
            }
            if ((this.onHabilitaDesabilitaAleraCompletedDelegate == null)) {
                this.onHabilitaDesabilitaAleraCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHabilitaDesabilitaAleraCompleted);
            }
            base.InvokeAsync(this.onBeginHabilitaDesabilitaAleraDelegate, new object[] {
                        alertaId,
                        habilita}, this.onEndHabilitaDesabilitaAleraDelegate, this.onHabilitaDesabilitaAleraCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.BeginInserirAlerta(Traderdata.Client.TerminalWEB.TraderdataDesktop.AlertaDTO alerta, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInserirAlerta(alerta, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.EndInserirAlerta(System.IAsyncResult result) {
            base.Channel.EndInserirAlerta(result);
        }
        
        private System.IAsyncResult OnBeginInserirAlerta(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Traderdata.Client.TerminalWEB.TraderdataDesktop.AlertaDTO alerta = ((Traderdata.Client.TerminalWEB.TraderdataDesktop.AlertaDTO)(inValues[0]));
            return ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).BeginInserirAlerta(alerta, callback, asyncState);
        }
        
        private object[] OnEndInserirAlerta(System.IAsyncResult result) {
            ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).EndInserirAlerta(result);
            return null;
        }
        
        private void OnInserirAlertaCompleted(object state) {
            if ((this.InserirAlertaCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InserirAlertaCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InserirAlertaAsync(Traderdata.Client.TerminalWEB.TraderdataDesktop.AlertaDTO alerta) {
            this.InserirAlertaAsync(alerta, null);
        }
        
        public void InserirAlertaAsync(Traderdata.Client.TerminalWEB.TraderdataDesktop.AlertaDTO alerta, object userState) {
            if ((this.onBeginInserirAlertaDelegate == null)) {
                this.onBeginInserirAlertaDelegate = new BeginOperationDelegate(this.OnBeginInserirAlerta);
            }
            if ((this.onEndInserirAlertaDelegate == null)) {
                this.onEndInserirAlertaDelegate = new EndOperationDelegate(this.OnEndInserirAlerta);
            }
            if ((this.onInserirAlertaCompletedDelegate == null)) {
                this.onInserirAlertaCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInserirAlertaCompleted);
            }
            base.InvokeAsync(this.onBeginInserirAlertaDelegate, new object[] {
                        alerta}, this.onEndInserirAlertaDelegate, this.onInserirAlertaCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.BeginEditaComentario(Traderdata.Client.TerminalWEB.TraderdataDesktop.AlertaDTO alerta, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEditaComentario(alerta, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.EndEditaComentario(System.IAsyncResult result) {
            base.Channel.EndEditaComentario(result);
        }
        
        private System.IAsyncResult OnBeginEditaComentario(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Traderdata.Client.TerminalWEB.TraderdataDesktop.AlertaDTO alerta = ((Traderdata.Client.TerminalWEB.TraderdataDesktop.AlertaDTO)(inValues[0]));
            return ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).BeginEditaComentario(alerta, callback, asyncState);
        }
        
        private object[] OnEndEditaComentario(System.IAsyncResult result) {
            ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).EndEditaComentario(result);
            return null;
        }
        
        private void OnEditaComentarioCompleted(object state) {
            if ((this.EditaComentarioCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EditaComentarioCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EditaComentarioAsync(Traderdata.Client.TerminalWEB.TraderdataDesktop.AlertaDTO alerta) {
            this.EditaComentarioAsync(alerta, null);
        }
        
        public void EditaComentarioAsync(Traderdata.Client.TerminalWEB.TraderdataDesktop.AlertaDTO alerta, object userState) {
            if ((this.onBeginEditaComentarioDelegate == null)) {
                this.onBeginEditaComentarioDelegate = new BeginOperationDelegate(this.OnBeginEditaComentario);
            }
            if ((this.onEndEditaComentarioDelegate == null)) {
                this.onEndEditaComentarioDelegate = new EndOperationDelegate(this.OnEndEditaComentario);
            }
            if ((this.onEditaComentarioCompletedDelegate == null)) {
                this.onEditaComentarioCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEditaComentarioCompleted);
            }
            base.InvokeAsync(this.onBeginEditaComentarioDelegate, new object[] {
                        alerta}, this.onEndEditaComentarioDelegate, this.onEditaComentarioCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.BeginExcluirAlerta(Traderdata.Client.TerminalWEB.TraderdataDesktop.AlertaDTO alerta, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginExcluirAlerta(alerta, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.EndExcluirAlerta(System.IAsyncResult result) {
            base.Channel.EndExcluirAlerta(result);
        }
        
        private System.IAsyncResult OnBeginExcluirAlerta(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Traderdata.Client.TerminalWEB.TraderdataDesktop.AlertaDTO alerta = ((Traderdata.Client.TerminalWEB.TraderdataDesktop.AlertaDTO)(inValues[0]));
            return ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).BeginExcluirAlerta(alerta, callback, asyncState);
        }
        
        private object[] OnEndExcluirAlerta(System.IAsyncResult result) {
            ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).EndExcluirAlerta(result);
            return null;
        }
        
        private void OnExcluirAlertaCompleted(object state) {
            if ((this.ExcluirAlertaCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ExcluirAlertaCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ExcluirAlertaAsync(Traderdata.Client.TerminalWEB.TraderdataDesktop.AlertaDTO alerta) {
            this.ExcluirAlertaAsync(alerta, null);
        }
        
        public void ExcluirAlertaAsync(Traderdata.Client.TerminalWEB.TraderdataDesktop.AlertaDTO alerta, object userState) {
            if ((this.onBeginExcluirAlertaDelegate == null)) {
                this.onBeginExcluirAlertaDelegate = new BeginOperationDelegate(this.OnBeginExcluirAlerta);
            }
            if ((this.onEndExcluirAlertaDelegate == null)) {
                this.onEndExcluirAlertaDelegate = new EndOperationDelegate(this.OnEndExcluirAlerta);
            }
            if ((this.onExcluirAlertaCompletedDelegate == null)) {
                this.onExcluirAlertaCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExcluirAlertaCompleted);
            }
            base.InvokeAsync(this.onBeginExcluirAlertaDelegate, new object[] {
                        alerta}, this.onEndExcluirAlertaDelegate, this.onExcluirAlertaCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.BeginGetAllAlertas(int usuario, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllAlertas(usuario, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.AlertaDTO> Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.EndGetAllAlertas(System.IAsyncResult result) {
            return base.Channel.EndGetAllAlertas(result);
        }
        
        private System.IAsyncResult OnBeginGetAllAlertas(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int usuario = ((int)(inValues[0]));
            return ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).BeginGetAllAlertas(usuario, callback, asyncState);
        }
        
        private object[] OnEndGetAllAlertas(System.IAsyncResult result) {
            System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.AlertaDTO> retVal = ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).EndGetAllAlertas(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllAlertasCompleted(object state) {
            if ((this.GetAllAlertasCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllAlertasCompleted(this, new GetAllAlertasCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllAlertasAsync(int usuario) {
            this.GetAllAlertasAsync(usuario, null);
        }
        
        public void GetAllAlertasAsync(int usuario, object userState) {
            if ((this.onBeginGetAllAlertasDelegate == null)) {
                this.onBeginGetAllAlertasDelegate = new BeginOperationDelegate(this.OnBeginGetAllAlertas);
            }
            if ((this.onEndGetAllAlertasDelegate == null)) {
                this.onEndGetAllAlertasDelegate = new EndOperationDelegate(this.OnEndGetAllAlertas);
            }
            if ((this.onGetAllAlertasCompletedDelegate == null)) {
                this.onGetAllAlertasCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllAlertasCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllAlertasDelegate, new object[] {
                        usuario}, this.onEndGetAllAlertasDelegate, this.onGetAllAlertasCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.BeginInsereCarteira(Traderdata.Client.TerminalWEB.TraderdataDesktop.CarteiraDTO carteira, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsereCarteira(carteira, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Traderdata.Client.TerminalWEB.TraderdataDesktop.CarteiraDTO Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.EndInsereCarteira(System.IAsyncResult result) {
            return base.Channel.EndInsereCarteira(result);
        }
        
        private System.IAsyncResult OnBeginInsereCarteira(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Traderdata.Client.TerminalWEB.TraderdataDesktop.CarteiraDTO carteira = ((Traderdata.Client.TerminalWEB.TraderdataDesktop.CarteiraDTO)(inValues[0]));
            return ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).BeginInsereCarteira(carteira, callback, asyncState);
        }
        
        private object[] OnEndInsereCarteira(System.IAsyncResult result) {
            Traderdata.Client.TerminalWEB.TraderdataDesktop.CarteiraDTO retVal = ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).EndInsereCarteira(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsereCarteiraCompleted(object state) {
            if ((this.InsereCarteiraCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsereCarteiraCompleted(this, new InsereCarteiraCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsereCarteiraAsync(Traderdata.Client.TerminalWEB.TraderdataDesktop.CarteiraDTO carteira) {
            this.InsereCarteiraAsync(carteira, null);
        }
        
        public void InsereCarteiraAsync(Traderdata.Client.TerminalWEB.TraderdataDesktop.CarteiraDTO carteira, object userState) {
            if ((this.onBeginInsereCarteiraDelegate == null)) {
                this.onBeginInsereCarteiraDelegate = new BeginOperationDelegate(this.OnBeginInsereCarteira);
            }
            if ((this.onEndInsereCarteiraDelegate == null)) {
                this.onEndInsereCarteiraDelegate = new EndOperationDelegate(this.OnEndInsereCarteira);
            }
            if ((this.onInsereCarteiraCompletedDelegate == null)) {
                this.onInsereCarteiraCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsereCarteiraCompleted);
            }
            base.InvokeAsync(this.onBeginInsereCarteiraDelegate, new object[] {
                        carteira}, this.onEndInsereCarteiraDelegate, this.onInsereCarteiraCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.BeginExcluiCarteira(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginExcluiCarteira(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.EndExcluiCarteira(System.IAsyncResult result) {
            base.Channel.EndExcluiCarteira(result);
        }
        
        private System.IAsyncResult OnBeginExcluiCarteira(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).BeginExcluiCarteira(id, callback, asyncState);
        }
        
        private object[] OnEndExcluiCarteira(System.IAsyncResult result) {
            ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).EndExcluiCarteira(result);
            return null;
        }
        
        private void OnExcluiCarteiraCompleted(object state) {
            if ((this.ExcluiCarteiraCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ExcluiCarteiraCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ExcluiCarteiraAsync(int id) {
            this.ExcluiCarteiraAsync(id, null);
        }
        
        public void ExcluiCarteiraAsync(int id, object userState) {
            if ((this.onBeginExcluiCarteiraDelegate == null)) {
                this.onBeginExcluiCarteiraDelegate = new BeginOperationDelegate(this.OnBeginExcluiCarteira);
            }
            if ((this.onEndExcluiCarteiraDelegate == null)) {
                this.onEndExcluiCarteiraDelegate = new EndOperationDelegate(this.OnEndExcluiCarteira);
            }
            if ((this.onExcluiCarteiraCompletedDelegate == null)) {
                this.onExcluiCarteiraCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExcluiCarteiraCompleted);
            }
            base.InvokeAsync(this.onBeginExcluiCarteiraDelegate, new object[] {
                        id}, this.onEndExcluiCarteiraDelegate, this.onExcluiCarteiraCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.BeginEditaCarteira(Traderdata.Client.TerminalWEB.TraderdataDesktop.CarteiraDTO carteira, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEditaCarteira(carteira, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.EndEditaCarteira(System.IAsyncResult result) {
            base.Channel.EndEditaCarteira(result);
        }
        
        private System.IAsyncResult OnBeginEditaCarteira(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Traderdata.Client.TerminalWEB.TraderdataDesktop.CarteiraDTO carteira = ((Traderdata.Client.TerminalWEB.TraderdataDesktop.CarteiraDTO)(inValues[0]));
            return ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).BeginEditaCarteira(carteira, callback, asyncState);
        }
        
        private object[] OnEndEditaCarteira(System.IAsyncResult result) {
            ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).EndEditaCarteira(result);
            return null;
        }
        
        private void OnEditaCarteiraCompleted(object state) {
            if ((this.EditaCarteiraCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EditaCarteiraCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EditaCarteiraAsync(Traderdata.Client.TerminalWEB.TraderdataDesktop.CarteiraDTO carteira) {
            this.EditaCarteiraAsync(carteira, null);
        }
        
        public void EditaCarteiraAsync(Traderdata.Client.TerminalWEB.TraderdataDesktop.CarteiraDTO carteira, object userState) {
            if ((this.onBeginEditaCarteiraDelegate == null)) {
                this.onBeginEditaCarteiraDelegate = new BeginOperationDelegate(this.OnBeginEditaCarteira);
            }
            if ((this.onEndEditaCarteiraDelegate == null)) {
                this.onEndEditaCarteiraDelegate = new EndOperationDelegate(this.OnEndEditaCarteira);
            }
            if ((this.onEditaCarteiraCompletedDelegate == null)) {
                this.onEditaCarteiraCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEditaCarteiraCompleted);
            }
            base.InvokeAsync(this.onBeginEditaCarteiraDelegate, new object[] {
                        carteira}, this.onEndEditaCarteiraDelegate, this.onEditaCarteiraCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.BeginRetornaCarteiraPorId(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetornaCarteiraPorId(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Traderdata.Client.TerminalWEB.TraderdataDesktop.CarteiraDTO Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.EndRetornaCarteiraPorId(System.IAsyncResult result) {
            return base.Channel.EndRetornaCarteiraPorId(result);
        }
        
        private System.IAsyncResult OnBeginRetornaCarteiraPorId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).BeginRetornaCarteiraPorId(id, callback, asyncState);
        }
        
        private object[] OnEndRetornaCarteiraPorId(System.IAsyncResult result) {
            Traderdata.Client.TerminalWEB.TraderdataDesktop.CarteiraDTO retVal = ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).EndRetornaCarteiraPorId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetornaCarteiraPorIdCompleted(object state) {
            if ((this.RetornaCarteiraPorIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetornaCarteiraPorIdCompleted(this, new RetornaCarteiraPorIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetornaCarteiraPorIdAsync(int id) {
            this.RetornaCarteiraPorIdAsync(id, null);
        }
        
        public void RetornaCarteiraPorIdAsync(int id, object userState) {
            if ((this.onBeginRetornaCarteiraPorIdDelegate == null)) {
                this.onBeginRetornaCarteiraPorIdDelegate = new BeginOperationDelegate(this.OnBeginRetornaCarteiraPorId);
            }
            if ((this.onEndRetornaCarteiraPorIdDelegate == null)) {
                this.onEndRetornaCarteiraPorIdDelegate = new EndOperationDelegate(this.OnEndRetornaCarteiraPorId);
            }
            if ((this.onRetornaCarteiraPorIdCompletedDelegate == null)) {
                this.onRetornaCarteiraPorIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetornaCarteiraPorIdCompleted);
            }
            base.InvokeAsync(this.onBeginRetornaCarteiraPorIdDelegate, new object[] {
                        id}, this.onEndRetornaCarteiraPorIdDelegate, this.onRetornaCarteiraPorIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.BeginRetornaCarteirasPorUsuario(int idUsuario, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetornaCarteirasPorUsuario(idUsuario, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.CarteiraDTO> Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.EndRetornaCarteirasPorUsuario(System.IAsyncResult result) {
            return base.Channel.EndRetornaCarteirasPorUsuario(result);
        }
        
        private System.IAsyncResult OnBeginRetornaCarteirasPorUsuario(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int idUsuario = ((int)(inValues[0]));
            return ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).BeginRetornaCarteirasPorUsuario(idUsuario, callback, asyncState);
        }
        
        private object[] OnEndRetornaCarteirasPorUsuario(System.IAsyncResult result) {
            System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.CarteiraDTO> retVal = ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).EndRetornaCarteirasPorUsuario(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetornaCarteirasPorUsuarioCompleted(object state) {
            if ((this.RetornaCarteirasPorUsuarioCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetornaCarteirasPorUsuarioCompleted(this, new RetornaCarteirasPorUsuarioCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetornaCarteirasPorUsuarioAsync(int idUsuario) {
            this.RetornaCarteirasPorUsuarioAsync(idUsuario, null);
        }
        
        public void RetornaCarteirasPorUsuarioAsync(int idUsuario, object userState) {
            if ((this.onBeginRetornaCarteirasPorUsuarioDelegate == null)) {
                this.onBeginRetornaCarteirasPorUsuarioDelegate = new BeginOperationDelegate(this.OnBeginRetornaCarteirasPorUsuario);
            }
            if ((this.onEndRetornaCarteirasPorUsuarioDelegate == null)) {
                this.onEndRetornaCarteirasPorUsuarioDelegate = new EndOperationDelegate(this.OnEndRetornaCarteirasPorUsuario);
            }
            if ((this.onRetornaCarteirasPorUsuarioCompletedDelegate == null)) {
                this.onRetornaCarteirasPorUsuarioCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetornaCarteirasPorUsuarioCompleted);
            }
            base.InvokeAsync(this.onBeginRetornaCarteirasPorUsuarioDelegate, new object[] {
                        idUsuario}, this.onEndRetornaCarteirasPorUsuarioDelegate, this.onRetornaCarteirasPorUsuarioCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.BeginInserirOrder(Traderdata.Client.TerminalWEB.TraderdataDesktop.OrderDTO ordem, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInserirOrder(ordem, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.EndInserirOrder(System.IAsyncResult result) {
            base.Channel.EndInserirOrder(result);
        }
        
        private System.IAsyncResult OnBeginInserirOrder(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Traderdata.Client.TerminalWEB.TraderdataDesktop.OrderDTO ordem = ((Traderdata.Client.TerminalWEB.TraderdataDesktop.OrderDTO)(inValues[0]));
            return ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).BeginInserirOrder(ordem, callback, asyncState);
        }
        
        private object[] OnEndInserirOrder(System.IAsyncResult result) {
            ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).EndInserirOrder(result);
            return null;
        }
        
        private void OnInserirOrderCompleted(object state) {
            if ((this.InserirOrderCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InserirOrderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InserirOrderAsync(Traderdata.Client.TerminalWEB.TraderdataDesktop.OrderDTO ordem) {
            this.InserirOrderAsync(ordem, null);
        }
        
        public void InserirOrderAsync(Traderdata.Client.TerminalWEB.TraderdataDesktop.OrderDTO ordem, object userState) {
            if ((this.onBeginInserirOrderDelegate == null)) {
                this.onBeginInserirOrderDelegate = new BeginOperationDelegate(this.OnBeginInserirOrder);
            }
            if ((this.onEndInserirOrderDelegate == null)) {
                this.onEndInserirOrderDelegate = new EndOperationDelegate(this.OnEndInserirOrder);
            }
            if ((this.onInserirOrderCompletedDelegate == null)) {
                this.onInserirOrderCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInserirOrderCompleted);
            }
            base.InvokeAsync(this.onBeginInserirOrderDelegate, new object[] {
                        ordem}, this.onEndInserirOrderDelegate, this.onInserirOrderCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.BeginGetAllOrders(int idUsuario, int idLastOrder, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllOrders(idUsuario, idLastOrder, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.OrderDTO> Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.EndGetAllOrders(System.IAsyncResult result) {
            return base.Channel.EndGetAllOrders(result);
        }
        
        private System.IAsyncResult OnBeginGetAllOrders(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int idUsuario = ((int)(inValues[0]));
            int idLastOrder = ((int)(inValues[1]));
            return ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).BeginGetAllOrders(idUsuario, idLastOrder, callback, asyncState);
        }
        
        private object[] OnEndGetAllOrders(System.IAsyncResult result) {
            System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.OrderDTO> retVal = ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).EndGetAllOrders(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllOrdersCompleted(object state) {
            if ((this.GetAllOrdersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllOrdersCompleted(this, new GetAllOrdersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllOrdersAsync(int idUsuario, int idLastOrder) {
            this.GetAllOrdersAsync(idUsuario, idLastOrder, null);
        }
        
        public void GetAllOrdersAsync(int idUsuario, int idLastOrder, object userState) {
            if ((this.onBeginGetAllOrdersDelegate == null)) {
                this.onBeginGetAllOrdersDelegate = new BeginOperationDelegate(this.OnBeginGetAllOrders);
            }
            if ((this.onEndGetAllOrdersDelegate == null)) {
                this.onEndGetAllOrdersDelegate = new EndOperationDelegate(this.OnEndGetAllOrders);
            }
            if ((this.onGetAllOrdersCompletedDelegate == null)) {
                this.onGetAllOrdersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllOrdersCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllOrdersDelegate, new object[] {
                        idUsuario,
                        idLastOrder}, this.onEndGetAllOrdersDelegate, this.onGetAllOrdersCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.BeginGetLastVersion(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLastVersion(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.EndGetLastVersion(System.IAsyncResult result) {
            return base.Channel.EndGetLastVersion(result);
        }
        
        private System.IAsyncResult OnBeginGetLastVersion(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).BeginGetLastVersion(callback, asyncState);
        }
        
        private object[] OnEndGetLastVersion(System.IAsyncResult result) {
            int retVal = ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).EndGetLastVersion(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLastVersionCompleted(object state) {
            if ((this.GetLastVersionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLastVersionCompleted(this, new GetLastVersionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLastVersionAsync() {
            this.GetLastVersionAsync(null);
        }
        
        public void GetLastVersionAsync(object userState) {
            if ((this.onBeginGetLastVersionDelegate == null)) {
                this.onBeginGetLastVersionDelegate = new BeginOperationDelegate(this.OnBeginGetLastVersion);
            }
            if ((this.onEndGetLastVersionDelegate == null)) {
                this.onEndGetLastVersionDelegate = new EndOperationDelegate(this.OnEndGetLastVersion);
            }
            if ((this.onGetLastVersionCompletedDelegate == null)) {
                this.onGetLastVersionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLastVersionCompleted);
            }
            base.InvokeAsync(this.onBeginGetLastVersionDelegate, null, this.onEndGetLastVersionDelegate, this.onGetLastVersionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.BeginGetWebfeederServer(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetWebfeederServer(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.EndGetWebfeederServer(System.IAsyncResult result) {
            return base.Channel.EndGetWebfeederServer(result);
        }
        
        private System.IAsyncResult OnBeginGetWebfeederServer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).BeginGetWebfeederServer(callback, asyncState);
        }
        
        private object[] OnEndGetWebfeederServer(System.IAsyncResult result) {
            string retVal = ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).EndGetWebfeederServer(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetWebfeederServerCompleted(object state) {
            if ((this.GetWebfeederServerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetWebfeederServerCompleted(this, new GetWebfeederServerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetWebfeederServerAsync() {
            this.GetWebfeederServerAsync(null);
        }
        
        public void GetWebfeederServerAsync(object userState) {
            if ((this.onBeginGetWebfeederServerDelegate == null)) {
                this.onBeginGetWebfeederServerDelegate = new BeginOperationDelegate(this.OnBeginGetWebfeederServer);
            }
            if ((this.onEndGetWebfeederServerDelegate == null)) {
                this.onEndGetWebfeederServerDelegate = new EndOperationDelegate(this.OnEndGetWebfeederServer);
            }
            if ((this.onGetWebfeederServerCompletedDelegate == null)) {
                this.onGetWebfeederServerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetWebfeederServerCompleted);
            }
            base.InvokeAsync(this.onBeginGetWebfeederServerDelegate, null, this.onEndGetWebfeederServerDelegate, this.onGetWebfeederServerCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.BeginReturnClientIP(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReturnClientIP(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.EndReturnClientIP(System.IAsyncResult result) {
            return base.Channel.EndReturnClientIP(result);
        }
        
        private System.IAsyncResult OnBeginReturnClientIP(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).BeginReturnClientIP(callback, asyncState);
        }
        
        private object[] OnEndReturnClientIP(System.IAsyncResult result) {
            string retVal = ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).EndReturnClientIP(result);
            return new object[] {
                    retVal};
        }
        
        private void OnReturnClientIPCompleted(object state) {
            if ((this.ReturnClientIPCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReturnClientIPCompleted(this, new ReturnClientIPCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReturnClientIPAsync() {
            this.ReturnClientIPAsync(null);
        }
        
        public void ReturnClientIPAsync(object userState) {
            if ((this.onBeginReturnClientIPDelegate == null)) {
                this.onBeginReturnClientIPDelegate = new BeginOperationDelegate(this.OnBeginReturnClientIP);
            }
            if ((this.onEndReturnClientIPDelegate == null)) {
                this.onEndReturnClientIPDelegate = new EndOperationDelegate(this.OnEndReturnClientIP);
            }
            if ((this.onReturnClientIPCompletedDelegate == null)) {
                this.onReturnClientIPCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReturnClientIPCompleted);
            }
            base.InvokeAsync(this.onBeginReturnClientIPDelegate, null, this.onEndReturnClientIPDelegate, this.onReturnClientIPCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.BeginInserirContaDemo(Traderdata.Client.TerminalWEB.TraderdataDesktop.ContaDemoDTO contaDemo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInserirContaDemo(contaDemo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.EndInserirContaDemo(System.IAsyncResult result) {
            base.Channel.EndInserirContaDemo(result);
        }
        
        private System.IAsyncResult OnBeginInserirContaDemo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Traderdata.Client.TerminalWEB.TraderdataDesktop.ContaDemoDTO contaDemo = ((Traderdata.Client.TerminalWEB.TraderdataDesktop.ContaDemoDTO)(inValues[0]));
            return ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).BeginInserirContaDemo(contaDemo, callback, asyncState);
        }
        
        private object[] OnEndInserirContaDemo(System.IAsyncResult result) {
            ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).EndInserirContaDemo(result);
            return null;
        }
        
        private void OnInserirContaDemoCompleted(object state) {
            if ((this.InserirContaDemoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InserirContaDemoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InserirContaDemoAsync(Traderdata.Client.TerminalWEB.TraderdataDesktop.ContaDemoDTO contaDemo) {
            this.InserirContaDemoAsync(contaDemo, null);
        }
        
        public void InserirContaDemoAsync(Traderdata.Client.TerminalWEB.TraderdataDesktop.ContaDemoDTO contaDemo, object userState) {
            if ((this.onBeginInserirContaDemoDelegate == null)) {
                this.onBeginInserirContaDemoDelegate = new BeginOperationDelegate(this.OnBeginInserirContaDemo);
            }
            if ((this.onEndInserirContaDemoDelegate == null)) {
                this.onEndInserirContaDemoDelegate = new EndOperationDelegate(this.OnEndInserirContaDemo);
            }
            if ((this.onInserirContaDemoCompletedDelegate == null)) {
                this.onInserirContaDemoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInserirContaDemoCompleted);
            }
            base.InvokeAsync(this.onBeginInserirContaDemoDelegate, new object[] {
                        contaDemo}, this.onEndInserirContaDemoDelegate, this.onInserirContaDemoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.BeginGetContasDemo(int usuarioId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetContasDemo(usuarioId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.ContaDemoDTO> Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.EndGetContasDemo(System.IAsyncResult result) {
            return base.Channel.EndGetContasDemo(result);
        }
        
        private System.IAsyncResult OnBeginGetContasDemo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int usuarioId = ((int)(inValues[0]));
            return ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).BeginGetContasDemo(usuarioId, callback, asyncState);
        }
        
        private object[] OnEndGetContasDemo(System.IAsyncResult result) {
            System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.ContaDemoDTO> retVal = ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).EndGetContasDemo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetContasDemoCompleted(object state) {
            if ((this.GetContasDemoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetContasDemoCompleted(this, new GetContasDemoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetContasDemoAsync(int usuarioId) {
            this.GetContasDemoAsync(usuarioId, null);
        }
        
        public void GetContasDemoAsync(int usuarioId, object userState) {
            if ((this.onBeginGetContasDemoDelegate == null)) {
                this.onBeginGetContasDemoDelegate = new BeginOperationDelegate(this.OnBeginGetContasDemo);
            }
            if ((this.onEndGetContasDemoDelegate == null)) {
                this.onEndGetContasDemoDelegate = new EndOperationDelegate(this.OnEndGetContasDemo);
            }
            if ((this.onGetContasDemoCompletedDelegate == null)) {
                this.onGetContasDemoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetContasDemoCompleted);
            }
            base.InvokeAsync(this.onBeginGetContasDemoDelegate, new object[] {
                        usuarioId}, this.onEndGetContasDemoDelegate, this.onGetContasDemoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.BeginGetBrokers(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBrokers(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.BrokerDTO> Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.EndGetBrokers(System.IAsyncResult result) {
            return base.Channel.EndGetBrokers(result);
        }
        
        private System.IAsyncResult OnBeginGetBrokers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).BeginGetBrokers(callback, asyncState);
        }
        
        private object[] OnEndGetBrokers(System.IAsyncResult result) {
            System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.BrokerDTO> retVal = ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).EndGetBrokers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBrokersCompleted(object state) {
            if ((this.GetBrokersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBrokersCompleted(this, new GetBrokersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBrokersAsync() {
            this.GetBrokersAsync(null);
        }
        
        public void GetBrokersAsync(object userState) {
            if ((this.onBeginGetBrokersDelegate == null)) {
                this.onBeginGetBrokersDelegate = new BeginOperationDelegate(this.OnBeginGetBrokers);
            }
            if ((this.onEndGetBrokersDelegate == null)) {
                this.onEndGetBrokersDelegate = new EndOperationDelegate(this.OnEndGetBrokers);
            }
            if ((this.onGetBrokersCompletedDelegate == null)) {
                this.onGetBrokersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBrokersCompleted);
            }
            base.InvokeAsync(this.onBeginGetBrokersDelegate, null, this.onEndGetBrokersDelegate, this.onGetBrokersCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.BeginLogin(string login, string senha, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLogin(login, senha, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Traderdata.Client.TerminalWEB.TraderdataDesktop.UsuarioDTO Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.EndLogin(System.IAsyncResult result) {
            return base.Channel.EndLogin(result);
        }
        
        private System.IAsyncResult OnBeginLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string login = ((string)(inValues[0]));
            string senha = ((string)(inValues[1]));
            return ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).BeginLogin(login, senha, callback, asyncState);
        }
        
        private object[] OnEndLogin(System.IAsyncResult result) {
            Traderdata.Client.TerminalWEB.TraderdataDesktop.UsuarioDTO retVal = ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).EndLogin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoginCompleted(object state) {
            if ((this.LoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoginCompleted(this, new LoginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoginAsync(string login, string senha) {
            this.LoginAsync(login, senha, null);
        }
        
        public void LoginAsync(string login, string senha, object userState) {
            if ((this.onBeginLoginDelegate == null)) {
                this.onBeginLoginDelegate = new BeginOperationDelegate(this.OnBeginLogin);
            }
            if ((this.onEndLoginDelegate == null)) {
                this.onEndLoginDelegate = new EndOperationDelegate(this.OnEndLogin);
            }
            if ((this.onLoginCompletedDelegate == null)) {
                this.onLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoginCompleted);
            }
            base.InvokeAsync(this.onBeginLoginDelegate, new object[] {
                        login,
                        senha}, this.onEndLoginDelegate, this.onLoginCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.BeginGetLoginByCPF(string cpf, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLoginByCPF(cpf, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.EndGetLoginByCPF(System.IAsyncResult result) {
            return base.Channel.EndGetLoginByCPF(result);
        }
        
        private System.IAsyncResult OnBeginGetLoginByCPF(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string cpf = ((string)(inValues[0]));
            return ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).BeginGetLoginByCPF(cpf, callback, asyncState);
        }
        
        private object[] OnEndGetLoginByCPF(System.IAsyncResult result) {
            string retVal = ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).EndGetLoginByCPF(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLoginByCPFCompleted(object state) {
            if ((this.GetLoginByCPFCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLoginByCPFCompleted(this, new GetLoginByCPFCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLoginByCPFAsync(string cpf) {
            this.GetLoginByCPFAsync(cpf, null);
        }
        
        public void GetLoginByCPFAsync(string cpf, object userState) {
            if ((this.onBeginGetLoginByCPFDelegate == null)) {
                this.onBeginGetLoginByCPFDelegate = new BeginOperationDelegate(this.OnBeginGetLoginByCPF);
            }
            if ((this.onEndGetLoginByCPFDelegate == null)) {
                this.onEndGetLoginByCPFDelegate = new EndOperationDelegate(this.OnEndGetLoginByCPF);
            }
            if ((this.onGetLoginByCPFCompletedDelegate == null)) {
                this.onGetLoginByCPFCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLoginByCPFCompleted);
            }
            base.InvokeAsync(this.onBeginGetLoginByCPFDelegate, new object[] {
                        cpf}, this.onEndGetLoginByCPFDelegate, this.onGetLoginByCPFCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.BeginReenviaSenhaPorCPF(string cpf, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReenviaSenhaPorCPF(cpf, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.EndReenviaSenhaPorCPF(System.IAsyncResult result) {
            return base.Channel.EndReenviaSenhaPorCPF(result);
        }
        
        private System.IAsyncResult OnBeginReenviaSenhaPorCPF(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string cpf = ((string)(inValues[0]));
            return ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).BeginReenviaSenhaPorCPF(cpf, callback, asyncState);
        }
        
        private object[] OnEndReenviaSenhaPorCPF(System.IAsyncResult result) {
            bool retVal = ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).EndReenviaSenhaPorCPF(result);
            return new object[] {
                    retVal};
        }
        
        private void OnReenviaSenhaPorCPFCompleted(object state) {
            if ((this.ReenviaSenhaPorCPFCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReenviaSenhaPorCPFCompleted(this, new ReenviaSenhaPorCPFCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReenviaSenhaPorCPFAsync(string cpf) {
            this.ReenviaSenhaPorCPFAsync(cpf, null);
        }
        
        public void ReenviaSenhaPorCPFAsync(string cpf, object userState) {
            if ((this.onBeginReenviaSenhaPorCPFDelegate == null)) {
                this.onBeginReenviaSenhaPorCPFDelegate = new BeginOperationDelegate(this.OnBeginReenviaSenhaPorCPF);
            }
            if ((this.onEndReenviaSenhaPorCPFDelegate == null)) {
                this.onEndReenviaSenhaPorCPFDelegate = new EndOperationDelegate(this.OnEndReenviaSenhaPorCPF);
            }
            if ((this.onReenviaSenhaPorCPFCompletedDelegate == null)) {
                this.onReenviaSenhaPorCPFCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReenviaSenhaPorCPFCompleted);
            }
            base.InvokeAsync(this.onBeginReenviaSenhaPorCPFDelegate, new object[] {
                        cpf}, this.onEndReenviaSenhaPorCPFDelegate, this.onReenviaSenhaPorCPFCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.BeginReenviaSenhaPorLogin(string login, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReenviaSenhaPorLogin(login, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.EndReenviaSenhaPorLogin(System.IAsyncResult result) {
            return base.Channel.EndReenviaSenhaPorLogin(result);
        }
        
        private System.IAsyncResult OnBeginReenviaSenhaPorLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string login = ((string)(inValues[0]));
            return ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).BeginReenviaSenhaPorLogin(login, callback, asyncState);
        }
        
        private object[] OnEndReenviaSenhaPorLogin(System.IAsyncResult result) {
            bool retVal = ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).EndReenviaSenhaPorLogin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnReenviaSenhaPorLoginCompleted(object state) {
            if ((this.ReenviaSenhaPorLoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReenviaSenhaPorLoginCompleted(this, new ReenviaSenhaPorLoginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReenviaSenhaPorLoginAsync(string login) {
            this.ReenviaSenhaPorLoginAsync(login, null);
        }
        
        public void ReenviaSenhaPorLoginAsync(string login, object userState) {
            if ((this.onBeginReenviaSenhaPorLoginDelegate == null)) {
                this.onBeginReenviaSenhaPorLoginDelegate = new BeginOperationDelegate(this.OnBeginReenviaSenhaPorLogin);
            }
            if ((this.onEndReenviaSenhaPorLoginDelegate == null)) {
                this.onEndReenviaSenhaPorLoginDelegate = new EndOperationDelegate(this.OnEndReenviaSenhaPorLogin);
            }
            if ((this.onReenviaSenhaPorLoginCompletedDelegate == null)) {
                this.onReenviaSenhaPorLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReenviaSenhaPorLoginCompleted);
            }
            base.InvokeAsync(this.onBeginReenviaSenhaPorLoginDelegate, new object[] {
                        login}, this.onEndReenviaSenhaPorLoginDelegate, this.onReenviaSenhaPorLoginCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.BeginInserirUsuario(Traderdata.Client.TerminalWEB.TraderdataDesktop.UsuarioDTO usuario, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInserirUsuario(usuario, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.EndInserirUsuario(System.IAsyncResult result) {
            base.Channel.EndInserirUsuario(result);
        }
        
        private System.IAsyncResult OnBeginInserirUsuario(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Traderdata.Client.TerminalWEB.TraderdataDesktop.UsuarioDTO usuario = ((Traderdata.Client.TerminalWEB.TraderdataDesktop.UsuarioDTO)(inValues[0]));
            return ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).BeginInserirUsuario(usuario, callback, asyncState);
        }
        
        private object[] OnEndInserirUsuario(System.IAsyncResult result) {
            ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).EndInserirUsuario(result);
            return null;
        }
        
        private void OnInserirUsuarioCompleted(object state) {
            if ((this.InserirUsuarioCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InserirUsuarioCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InserirUsuarioAsync(Traderdata.Client.TerminalWEB.TraderdataDesktop.UsuarioDTO usuario) {
            this.InserirUsuarioAsync(usuario, null);
        }
        
        public void InserirUsuarioAsync(Traderdata.Client.TerminalWEB.TraderdataDesktop.UsuarioDTO usuario, object userState) {
            if ((this.onBeginInserirUsuarioDelegate == null)) {
                this.onBeginInserirUsuarioDelegate = new BeginOperationDelegate(this.OnBeginInserirUsuario);
            }
            if ((this.onEndInserirUsuarioDelegate == null)) {
                this.onEndInserirUsuarioDelegate = new EndOperationDelegate(this.OnEndInserirUsuario);
            }
            if ((this.onInserirUsuarioCompletedDelegate == null)) {
                this.onInserirUsuarioCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInserirUsuarioCompleted);
            }
            base.InvokeAsync(this.onBeginInserirUsuarioDelegate, new object[] {
                        usuario}, this.onEndInserirUsuarioDelegate, this.onInserirUsuarioCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.BeginInserirUsuarioIntegracaoCorretora(Traderdata.Client.TerminalWEB.TraderdataDesktop.UsuarioDTO usuario, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInserirUsuarioIntegracaoCorretora(usuario, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.EndInserirUsuarioIntegracaoCorretora(System.IAsyncResult result) {
            base.Channel.EndInserirUsuarioIntegracaoCorretora(result);
        }
        
        private System.IAsyncResult OnBeginInserirUsuarioIntegracaoCorretora(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Traderdata.Client.TerminalWEB.TraderdataDesktop.UsuarioDTO usuario = ((Traderdata.Client.TerminalWEB.TraderdataDesktop.UsuarioDTO)(inValues[0]));
            return ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).BeginInserirUsuarioIntegracaoCorretora(usuario, callback, asyncState);
        }
        
        private object[] OnEndInserirUsuarioIntegracaoCorretora(System.IAsyncResult result) {
            ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).EndInserirUsuarioIntegracaoCorretora(result);
            return null;
        }
        
        private void OnInserirUsuarioIntegracaoCorretoraCompleted(object state) {
            if ((this.InserirUsuarioIntegracaoCorretoraCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InserirUsuarioIntegracaoCorretoraCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InserirUsuarioIntegracaoCorretoraAsync(Traderdata.Client.TerminalWEB.TraderdataDesktop.UsuarioDTO usuario) {
            this.InserirUsuarioIntegracaoCorretoraAsync(usuario, null);
        }
        
        public void InserirUsuarioIntegracaoCorretoraAsync(Traderdata.Client.TerminalWEB.TraderdataDesktop.UsuarioDTO usuario, object userState) {
            if ((this.onBeginInserirUsuarioIntegracaoCorretoraDelegate == null)) {
                this.onBeginInserirUsuarioIntegracaoCorretoraDelegate = new BeginOperationDelegate(this.OnBeginInserirUsuarioIntegracaoCorretora);
            }
            if ((this.onEndInserirUsuarioIntegracaoCorretoraDelegate == null)) {
                this.onEndInserirUsuarioIntegracaoCorretoraDelegate = new EndOperationDelegate(this.OnEndInserirUsuarioIntegracaoCorretora);
            }
            if ((this.onInserirUsuarioIntegracaoCorretoraCompletedDelegate == null)) {
                this.onInserirUsuarioIntegracaoCorretoraCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInserirUsuarioIntegracaoCorretoraCompleted);
            }
            base.InvokeAsync(this.onBeginInserirUsuarioIntegracaoCorretoraDelegate, new object[] {
                        usuario}, this.onEndInserirUsuarioIntegracaoCorretoraDelegate, this.onInserirUsuarioIntegracaoCorretoraCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.BeginExisteCPF(string cpf, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginExisteCPF(cpf, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.EndExisteCPF(System.IAsyncResult result) {
            return base.Channel.EndExisteCPF(result);
        }
        
        private System.IAsyncResult OnBeginExisteCPF(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string cpf = ((string)(inValues[0]));
            return ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).BeginExisteCPF(cpf, callback, asyncState);
        }
        
        private object[] OnEndExisteCPF(System.IAsyncResult result) {
            bool retVal = ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).EndExisteCPF(result);
            return new object[] {
                    retVal};
        }
        
        private void OnExisteCPFCompleted(object state) {
            if ((this.ExisteCPFCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ExisteCPFCompleted(this, new ExisteCPFCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ExisteCPFAsync(string cpf) {
            this.ExisteCPFAsync(cpf, null);
        }
        
        public void ExisteCPFAsync(string cpf, object userState) {
            if ((this.onBeginExisteCPFDelegate == null)) {
                this.onBeginExisteCPFDelegate = new BeginOperationDelegate(this.OnBeginExisteCPF);
            }
            if ((this.onEndExisteCPFDelegate == null)) {
                this.onEndExisteCPFDelegate = new EndOperationDelegate(this.OnEndExisteCPF);
            }
            if ((this.onExisteCPFCompletedDelegate == null)) {
                this.onExisteCPFCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExisteCPFCompleted);
            }
            base.InvokeAsync(this.onBeginExisteCPFDelegate, new object[] {
                        cpf}, this.onEndExisteCPFDelegate, this.onExisteCPFCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.BeginExisteEmail(string email, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginExisteEmail(email, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.EndExisteEmail(System.IAsyncResult result) {
            return base.Channel.EndExisteEmail(result);
        }
        
        private System.IAsyncResult OnBeginExisteEmail(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string email = ((string)(inValues[0]));
            return ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).BeginExisteEmail(email, callback, asyncState);
        }
        
        private object[] OnEndExisteEmail(System.IAsyncResult result) {
            bool retVal = ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).EndExisteEmail(result);
            return new object[] {
                    retVal};
        }
        
        private void OnExisteEmailCompleted(object state) {
            if ((this.ExisteEmailCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ExisteEmailCompleted(this, new ExisteEmailCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ExisteEmailAsync(string email) {
            this.ExisteEmailAsync(email, null);
        }
        
        public void ExisteEmailAsync(string email, object userState) {
            if ((this.onBeginExisteEmailDelegate == null)) {
                this.onBeginExisteEmailDelegate = new BeginOperationDelegate(this.OnBeginExisteEmail);
            }
            if ((this.onEndExisteEmailDelegate == null)) {
                this.onEndExisteEmailDelegate = new EndOperationDelegate(this.OnEndExisteEmail);
            }
            if ((this.onExisteEmailCompletedDelegate == null)) {
                this.onExisteEmailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExisteEmailCompleted);
            }
            base.InvokeAsync(this.onBeginExisteEmailDelegate, new object[] {
                        email}, this.onEndExisteEmailDelegate, this.onExisteEmailCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.BeginGetTokenByUserLogin(string login, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTokenByUserLogin(login, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.EndGetTokenByUserLogin(System.IAsyncResult result) {
            return base.Channel.EndGetTokenByUserLogin(result);
        }
        
        private System.IAsyncResult OnBeginGetTokenByUserLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string login = ((string)(inValues[0]));
            return ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).BeginGetTokenByUserLogin(login, callback, asyncState);
        }
        
        private object[] OnEndGetTokenByUserLogin(System.IAsyncResult result) {
            string retVal = ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).EndGetTokenByUserLogin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTokenByUserLoginCompleted(object state) {
            if ((this.GetTokenByUserLoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTokenByUserLoginCompleted(this, new GetTokenByUserLoginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTokenByUserLoginAsync(string login) {
            this.GetTokenByUserLoginAsync(login, null);
        }
        
        public void GetTokenByUserLoginAsync(string login, object userState) {
            if ((this.onBeginGetTokenByUserLoginDelegate == null)) {
                this.onBeginGetTokenByUserLoginDelegate = new BeginOperationDelegate(this.OnBeginGetTokenByUserLogin);
            }
            if ((this.onEndGetTokenByUserLoginDelegate == null)) {
                this.onEndGetTokenByUserLoginDelegate = new EndOperationDelegate(this.OnEndGetTokenByUserLogin);
            }
            if ((this.onGetTokenByUserLoginCompletedDelegate == null)) {
                this.onGetTokenByUserLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTokenByUserLoginCompleted);
            }
            base.InvokeAsync(this.onBeginGetTokenByUserLoginDelegate, new object[] {
                        login}, this.onEndGetTokenByUserLoginDelegate, this.onGetTokenByUserLoginCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.BeginRefreshTokenByUserLogin(string login, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRefreshTokenByUserLogin(login, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.EndRefreshTokenByUserLogin(System.IAsyncResult result) {
            return base.Channel.EndRefreshTokenByUserLogin(result);
        }
        
        private System.IAsyncResult OnBeginRefreshTokenByUserLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string login = ((string)(inValues[0]));
            return ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).BeginRefreshTokenByUserLogin(login, callback, asyncState);
        }
        
        private object[] OnEndRefreshTokenByUserLogin(System.IAsyncResult result) {
            string retVal = ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).EndRefreshTokenByUserLogin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRefreshTokenByUserLoginCompleted(object state) {
            if ((this.RefreshTokenByUserLoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RefreshTokenByUserLoginCompleted(this, new RefreshTokenByUserLoginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RefreshTokenByUserLoginAsync(string login) {
            this.RefreshTokenByUserLoginAsync(login, null);
        }
        
        public void RefreshTokenByUserLoginAsync(string login, object userState) {
            if ((this.onBeginRefreshTokenByUserLoginDelegate == null)) {
                this.onBeginRefreshTokenByUserLoginDelegate = new BeginOperationDelegate(this.OnBeginRefreshTokenByUserLogin);
            }
            if ((this.onEndRefreshTokenByUserLoginDelegate == null)) {
                this.onEndRefreshTokenByUserLoginDelegate = new EndOperationDelegate(this.OnEndRefreshTokenByUserLogin);
            }
            if ((this.onRefreshTokenByUserLoginCompletedDelegate == null)) {
                this.onRefreshTokenByUserLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRefreshTokenByUserLoginCompleted);
            }
            base.InvokeAsync(this.onBeginRefreshTokenByUserLoginDelegate, new object[] {
                        login}, this.onEndRefreshTokenByUserLoginDelegate, this.onRefreshTokenByUserLoginCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.BeginValidateToken(string token, string login, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginValidateToken(token, login, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.EndValidateToken(System.IAsyncResult result) {
            return base.Channel.EndValidateToken(result);
        }
        
        private System.IAsyncResult OnBeginValidateToken(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string login = ((string)(inValues[1]));
            return ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).BeginValidateToken(token, login, callback, asyncState);
        }
        
        private object[] OnEndValidateToken(System.IAsyncResult result) {
            bool retVal = ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).EndValidateToken(result);
            return new object[] {
                    retVal};
        }
        
        private void OnValidateTokenCompleted(object state) {
            if ((this.ValidateTokenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ValidateTokenCompleted(this, new ValidateTokenCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ValidateTokenAsync(string token, string login) {
            this.ValidateTokenAsync(token, login, null);
        }
        
        public void ValidateTokenAsync(string token, string login, object userState) {
            if ((this.onBeginValidateTokenDelegate == null)) {
                this.onBeginValidateTokenDelegate = new BeginOperationDelegate(this.OnBeginValidateToken);
            }
            if ((this.onEndValidateTokenDelegate == null)) {
                this.onEndValidateTokenDelegate = new EndOperationDelegate(this.OnEndValidateToken);
            }
            if ((this.onValidateTokenCompletedDelegate == null)) {
                this.onValidateTokenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnValidateTokenCompleted);
            }
            base.InvokeAsync(this.onBeginValidateTokenDelegate, new object[] {
                        token,
                        login}, this.onEndValidateTokenDelegate, this.onValidateTokenCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.BeginGetExchangesUserHasAccess(string login, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetExchangesUserHasAccess(login, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.EndGetExchangesUserHasAccess(System.IAsyncResult result) {
            return base.Channel.EndGetExchangesUserHasAccess(result);
        }
        
        private System.IAsyncResult OnBeginGetExchangesUserHasAccess(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string login = ((string)(inValues[0]));
            return ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).BeginGetExchangesUserHasAccess(login, callback, asyncState);
        }
        
        private object[] OnEndGetExchangesUserHasAccess(System.IAsyncResult result) {
            string retVal = ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).EndGetExchangesUserHasAccess(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetExchangesUserHasAccessCompleted(object state) {
            if ((this.GetExchangesUserHasAccessCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetExchangesUserHasAccessCompleted(this, new GetExchangesUserHasAccessCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetExchangesUserHasAccessAsync(string login) {
            this.GetExchangesUserHasAccessAsync(login, null);
        }
        
        public void GetExchangesUserHasAccessAsync(string login, object userState) {
            if ((this.onBeginGetExchangesUserHasAccessDelegate == null)) {
                this.onBeginGetExchangesUserHasAccessDelegate = new BeginOperationDelegate(this.OnBeginGetExchangesUserHasAccess);
            }
            if ((this.onEndGetExchangesUserHasAccessDelegate == null)) {
                this.onEndGetExchangesUserHasAccessDelegate = new EndOperationDelegate(this.OnEndGetExchangesUserHasAccess);
            }
            if ((this.onGetExchangesUserHasAccessCompletedDelegate == null)) {
                this.onGetExchangesUserHasAccessCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetExchangesUserHasAccessCompleted);
            }
            base.InvokeAsync(this.onBeginGetExchangesUserHasAccessDelegate, new object[] {
                        login}, this.onEndGetExchangesUserHasAccessDelegate, this.onGetExchangesUserHasAccessCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.BeginGetExperts(int idUsuario, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetExperts(idUsuario, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.ExpertDTO> Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.EndGetExperts(System.IAsyncResult result) {
            return base.Channel.EndGetExperts(result);
        }
        
        private System.IAsyncResult OnBeginGetExperts(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int idUsuario = ((int)(inValues[0]));
            return ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).BeginGetExperts(idUsuario, callback, asyncState);
        }
        
        private object[] OnEndGetExperts(System.IAsyncResult result) {
            System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.ExpertDTO> retVal = ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).EndGetExperts(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetExpertsCompleted(object state) {
            if ((this.GetExpertsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetExpertsCompleted(this, new GetExpertsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetExpertsAsync(int idUsuario) {
            this.GetExpertsAsync(idUsuario, null);
        }
        
        public void GetExpertsAsync(int idUsuario, object userState) {
            if ((this.onBeginGetExpertsDelegate == null)) {
                this.onBeginGetExpertsDelegate = new BeginOperationDelegate(this.OnBeginGetExperts);
            }
            if ((this.onEndGetExpertsDelegate == null)) {
                this.onEndGetExpertsDelegate = new EndOperationDelegate(this.OnEndGetExperts);
            }
            if ((this.onGetExpertsCompletedDelegate == null)) {
                this.onGetExpertsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetExpertsCompleted);
            }
            base.InvokeAsync(this.onBeginGetExpertsDelegate, new object[] {
                        idUsuario}, this.onEndGetExpertsDelegate, this.onGetExpertsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.BeginInsertLiveAccount(Traderdata.Client.TerminalWEB.TraderdataDesktop.LiveAccountDTO liveAccount, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertLiveAccount(liveAccount, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.EndInsertLiveAccount(System.IAsyncResult result) {
            base.Channel.EndInsertLiveAccount(result);
        }
        
        private System.IAsyncResult OnBeginInsertLiveAccount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Traderdata.Client.TerminalWEB.TraderdataDesktop.LiveAccountDTO liveAccount = ((Traderdata.Client.TerminalWEB.TraderdataDesktop.LiveAccountDTO)(inValues[0]));
            return ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).BeginInsertLiveAccount(liveAccount, callback, asyncState);
        }
        
        private object[] OnEndInsertLiveAccount(System.IAsyncResult result) {
            ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).EndInsertLiveAccount(result);
            return null;
        }
        
        private void OnInsertLiveAccountCompleted(object state) {
            if ((this.InsertLiveAccountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertLiveAccountCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertLiveAccountAsync(Traderdata.Client.TerminalWEB.TraderdataDesktop.LiveAccountDTO liveAccount) {
            this.InsertLiveAccountAsync(liveAccount, null);
        }
        
        public void InsertLiveAccountAsync(Traderdata.Client.TerminalWEB.TraderdataDesktop.LiveAccountDTO liveAccount, object userState) {
            if ((this.onBeginInsertLiveAccountDelegate == null)) {
                this.onBeginInsertLiveAccountDelegate = new BeginOperationDelegate(this.OnBeginInsertLiveAccount);
            }
            if ((this.onEndInsertLiveAccountDelegate == null)) {
                this.onEndInsertLiveAccountDelegate = new EndOperationDelegate(this.OnEndInsertLiveAccount);
            }
            if ((this.onInsertLiveAccountCompletedDelegate == null)) {
                this.onInsertLiveAccountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertLiveAccountCompleted);
            }
            base.InvokeAsync(this.onBeginInsertLiveAccountDelegate, new object[] {
                        liveAccount}, this.onEndInsertLiveAccountDelegate, this.onInsertLiveAccountCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.BeginGetLiveAccounts(int usuario, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLiveAccounts(usuario, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.LiveAccountDTO> Traderdata.Client.TerminalWEB.TraderdataDesktop.IService.EndGetLiveAccounts(System.IAsyncResult result) {
            return base.Channel.EndGetLiveAccounts(result);
        }
        
        private System.IAsyncResult OnBeginGetLiveAccounts(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int usuario = ((int)(inValues[0]));
            return ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).BeginGetLiveAccounts(usuario, callback, asyncState);
        }
        
        private object[] OnEndGetLiveAccounts(System.IAsyncResult result) {
            System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.LiveAccountDTO> retVal = ((Traderdata.Client.TerminalWEB.TraderdataDesktop.IService)(this)).EndGetLiveAccounts(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLiveAccountsCompleted(object state) {
            if ((this.GetLiveAccountsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLiveAccountsCompleted(this, new GetLiveAccountsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLiveAccountsAsync(int usuario) {
            this.GetLiveAccountsAsync(usuario, null);
        }
        
        public void GetLiveAccountsAsync(int usuario, object userState) {
            if ((this.onBeginGetLiveAccountsDelegate == null)) {
                this.onBeginGetLiveAccountsDelegate = new BeginOperationDelegate(this.OnBeginGetLiveAccounts);
            }
            if ((this.onEndGetLiveAccountsDelegate == null)) {
                this.onEndGetLiveAccountsDelegate = new EndOperationDelegate(this.OnEndGetLiveAccounts);
            }
            if ((this.onGetLiveAccountsCompletedDelegate == null)) {
                this.onGetLiveAccountsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLiveAccountsCompleted);
            }
            base.InvokeAsync(this.onBeginGetLiveAccountsDelegate, new object[] {
                        usuario}, this.onEndGetLiveAccountsDelegate, this.onGetLiveAccountsCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Traderdata.Client.TerminalWEB.TraderdataDesktop.IService CreateChannel() {
            return new ServiceClientChannel(this);
        }
        
        private class ServiceClientChannel : ChannelBase<Traderdata.Client.TerminalWEB.TraderdataDesktop.IService>, Traderdata.Client.TerminalWEB.TraderdataDesktop.IService {
            
            public ServiceClientChannel(System.ServiceModel.ClientBase<Traderdata.Client.TerminalWEB.TraderdataDesktop.IService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginUpdateNumeroVisualizacaoAnalise(Traderdata.Client.TerminalWEB.TraderdataDesktop.AnaliseDTO analise, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = analise;
                System.IAsyncResult _result = base.BeginInvoke("UpdateNumeroVisualizacaoAnalise", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUpdateNumeroVisualizacaoAnalise(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UpdateNumeroVisualizacaoAnalise", _args, result);
            }
            
            public System.IAsyncResult BeginInserirAnalise(Traderdata.Client.TerminalWEB.TraderdataDesktop.AnaliseDTO analise, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = analise;
                System.IAsyncResult _result = base.BeginInvoke("InserirAnalise", _args, callback, asyncState);
                return _result;
            }
            
            public void EndInserirAnalise(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("InserirAnalise", _args, result);
            }
            
            public System.IAsyncResult BeginDeleteAnalise(Traderdata.Client.TerminalWEB.TraderdataDesktop.AnaliseDTO analise, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = analise;
                System.IAsyncResult _result = base.BeginInvoke("DeleteAnalise", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDeleteAnalise(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DeleteAnalise", _args, result);
            }
            
            public System.IAsyncResult BeginGetAllAnalises(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAllAnalises", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.AnaliseDTO> EndGetAllAnalises(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.AnaliseDTO> _result = ((System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.AnaliseDTO>)(base.EndInvoke("GetAllAnalises", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllLikes(int usuario, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = usuario;
                System.IAsyncResult _result = base.BeginInvoke("GetAllLikes", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.LikeAnaliseDTO> EndGetAllLikes(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.LikeAnaliseDTO> _result = ((System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.LikeAnaliseDTO>)(base.EndInvoke("GetAllLikes", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsertLike(Traderdata.Client.TerminalWEB.TraderdataDesktop.LikeAnaliseDTO likeanalise, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = likeanalise;
                System.IAsyncResult _result = base.BeginInvoke("InsertLike", _args, callback, asyncState);
                return _result;
            }
            
            public void EndInsertLike(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("InsertLike", _args, result);
            }
            
            public System.IAsyncResult BeginGetLikeStat(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetLikeStat", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.Dictionary<int, int> EndGetLikeStat(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.Dictionary<int, int> _result = ((System.Collections.Generic.Dictionary<int, int>)(base.EndInvoke("GetLikeStat", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginHabilitaDesabilitaAlera(int alertaId, bool habilita, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = alertaId;
                _args[1] = habilita;
                System.IAsyncResult _result = base.BeginInvoke("HabilitaDesabilitaAlera", _args, callback, asyncState);
                return _result;
            }
            
            public void EndHabilitaDesabilitaAlera(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("HabilitaDesabilitaAlera", _args, result);
            }
            
            public System.IAsyncResult BeginInserirAlerta(Traderdata.Client.TerminalWEB.TraderdataDesktop.AlertaDTO alerta, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = alerta;
                System.IAsyncResult _result = base.BeginInvoke("InserirAlerta", _args, callback, asyncState);
                return _result;
            }
            
            public void EndInserirAlerta(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("InserirAlerta", _args, result);
            }
            
            public System.IAsyncResult BeginEditaComentario(Traderdata.Client.TerminalWEB.TraderdataDesktop.AlertaDTO alerta, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = alerta;
                System.IAsyncResult _result = base.BeginInvoke("EditaComentario", _args, callback, asyncState);
                return _result;
            }
            
            public void EndEditaComentario(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("EditaComentario", _args, result);
            }
            
            public System.IAsyncResult BeginExcluirAlerta(Traderdata.Client.TerminalWEB.TraderdataDesktop.AlertaDTO alerta, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = alerta;
                System.IAsyncResult _result = base.BeginInvoke("ExcluirAlerta", _args, callback, asyncState);
                return _result;
            }
            
            public void EndExcluirAlerta(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("ExcluirAlerta", _args, result);
            }
            
            public System.IAsyncResult BeginGetAllAlertas(int usuario, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = usuario;
                System.IAsyncResult _result = base.BeginInvoke("GetAllAlertas", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.AlertaDTO> EndGetAllAlertas(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.AlertaDTO> _result = ((System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.AlertaDTO>)(base.EndInvoke("GetAllAlertas", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsereCarteira(Traderdata.Client.TerminalWEB.TraderdataDesktop.CarteiraDTO carteira, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = carteira;
                System.IAsyncResult _result = base.BeginInvoke("InsereCarteira", _args, callback, asyncState);
                return _result;
            }
            
            public Traderdata.Client.TerminalWEB.TraderdataDesktop.CarteiraDTO EndInsereCarteira(System.IAsyncResult result) {
                object[] _args = new object[0];
                Traderdata.Client.TerminalWEB.TraderdataDesktop.CarteiraDTO _result = ((Traderdata.Client.TerminalWEB.TraderdataDesktop.CarteiraDTO)(base.EndInvoke("InsereCarteira", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginExcluiCarteira(int id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("ExcluiCarteira", _args, callback, asyncState);
                return _result;
            }
            
            public void EndExcluiCarteira(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("ExcluiCarteira", _args, result);
            }
            
            public System.IAsyncResult BeginEditaCarteira(Traderdata.Client.TerminalWEB.TraderdataDesktop.CarteiraDTO carteira, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = carteira;
                System.IAsyncResult _result = base.BeginInvoke("EditaCarteira", _args, callback, asyncState);
                return _result;
            }
            
            public void EndEditaCarteira(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("EditaCarteira", _args, result);
            }
            
            public System.IAsyncResult BeginRetornaCarteiraPorId(int id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("RetornaCarteiraPorId", _args, callback, asyncState);
                return _result;
            }
            
            public Traderdata.Client.TerminalWEB.TraderdataDesktop.CarteiraDTO EndRetornaCarteiraPorId(System.IAsyncResult result) {
                object[] _args = new object[0];
                Traderdata.Client.TerminalWEB.TraderdataDesktop.CarteiraDTO _result = ((Traderdata.Client.TerminalWEB.TraderdataDesktop.CarteiraDTO)(base.EndInvoke("RetornaCarteiraPorId", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRetornaCarteirasPorUsuario(int idUsuario, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = idUsuario;
                System.IAsyncResult _result = base.BeginInvoke("RetornaCarteirasPorUsuario", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.CarteiraDTO> EndRetornaCarteirasPorUsuario(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.CarteiraDTO> _result = ((System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.CarteiraDTO>)(base.EndInvoke("RetornaCarteirasPorUsuario", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInserirOrder(Traderdata.Client.TerminalWEB.TraderdataDesktop.OrderDTO ordem, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ordem;
                System.IAsyncResult _result = base.BeginInvoke("InserirOrder", _args, callback, asyncState);
                return _result;
            }
            
            public void EndInserirOrder(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("InserirOrder", _args, result);
            }
            
            public System.IAsyncResult BeginGetAllOrders(int idUsuario, int idLastOrder, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = idUsuario;
                _args[1] = idLastOrder;
                System.IAsyncResult _result = base.BeginInvoke("GetAllOrders", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.OrderDTO> EndGetAllOrders(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.OrderDTO> _result = ((System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.OrderDTO>)(base.EndInvoke("GetAllOrders", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetLastVersion(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetLastVersion", _args, callback, asyncState);
                return _result;
            }
            
            public int EndGetLastVersion(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("GetLastVersion", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetWebfeederServer(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetWebfeederServer", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetWebfeederServer(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetWebfeederServer", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginReturnClientIP(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("ReturnClientIP", _args, callback, asyncState);
                return _result;
            }
            
            public string EndReturnClientIP(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("ReturnClientIP", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInserirContaDemo(Traderdata.Client.TerminalWEB.TraderdataDesktop.ContaDemoDTO contaDemo, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = contaDemo;
                System.IAsyncResult _result = base.BeginInvoke("InserirContaDemo", _args, callback, asyncState);
                return _result;
            }
            
            public void EndInserirContaDemo(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("InserirContaDemo", _args, result);
            }
            
            public System.IAsyncResult BeginGetContasDemo(int usuarioId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = usuarioId;
                System.IAsyncResult _result = base.BeginInvoke("GetContasDemo", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.ContaDemoDTO> EndGetContasDemo(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.ContaDemoDTO> _result = ((System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.ContaDemoDTO>)(base.EndInvoke("GetContasDemo", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetBrokers(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetBrokers", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.BrokerDTO> EndGetBrokers(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.BrokerDTO> _result = ((System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.BrokerDTO>)(base.EndInvoke("GetBrokers", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginLogin(string login, string senha, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = login;
                _args[1] = senha;
                System.IAsyncResult _result = base.BeginInvoke("Login", _args, callback, asyncState);
                return _result;
            }
            
            public Traderdata.Client.TerminalWEB.TraderdataDesktop.UsuarioDTO EndLogin(System.IAsyncResult result) {
                object[] _args = new object[0];
                Traderdata.Client.TerminalWEB.TraderdataDesktop.UsuarioDTO _result = ((Traderdata.Client.TerminalWEB.TraderdataDesktop.UsuarioDTO)(base.EndInvoke("Login", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetLoginByCPF(string cpf, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = cpf;
                System.IAsyncResult _result = base.BeginInvoke("GetLoginByCPF", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetLoginByCPF(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetLoginByCPF", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginReenviaSenhaPorCPF(string cpf, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = cpf;
                System.IAsyncResult _result = base.BeginInvoke("ReenviaSenhaPorCPF", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndReenviaSenhaPorCPF(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("ReenviaSenhaPorCPF", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginReenviaSenhaPorLogin(string login, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = login;
                System.IAsyncResult _result = base.BeginInvoke("ReenviaSenhaPorLogin", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndReenviaSenhaPorLogin(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("ReenviaSenhaPorLogin", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInserirUsuario(Traderdata.Client.TerminalWEB.TraderdataDesktop.UsuarioDTO usuario, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = usuario;
                System.IAsyncResult _result = base.BeginInvoke("InserirUsuario", _args, callback, asyncState);
                return _result;
            }
            
            public void EndInserirUsuario(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("InserirUsuario", _args, result);
            }
            
            public System.IAsyncResult BeginInserirUsuarioIntegracaoCorretora(Traderdata.Client.TerminalWEB.TraderdataDesktop.UsuarioDTO usuario, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = usuario;
                System.IAsyncResult _result = base.BeginInvoke("InserirUsuarioIntegracaoCorretora", _args, callback, asyncState);
                return _result;
            }
            
            public void EndInserirUsuarioIntegracaoCorretora(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("InserirUsuarioIntegracaoCorretora", _args, result);
            }
            
            public System.IAsyncResult BeginExisteCPF(string cpf, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = cpf;
                System.IAsyncResult _result = base.BeginInvoke("ExisteCPF", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndExisteCPF(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("ExisteCPF", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginExisteEmail(string email, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = email;
                System.IAsyncResult _result = base.BeginInvoke("ExisteEmail", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndExisteEmail(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("ExisteEmail", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTokenByUserLogin(string login, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = login;
                System.IAsyncResult _result = base.BeginInvoke("GetTokenByUserLogin", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetTokenByUserLogin(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetTokenByUserLogin", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRefreshTokenByUserLogin(string login, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = login;
                System.IAsyncResult _result = base.BeginInvoke("RefreshTokenByUserLogin", _args, callback, asyncState);
                return _result;
            }
            
            public string EndRefreshTokenByUserLogin(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("RefreshTokenByUserLogin", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginValidateToken(string token, string login, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = login;
                System.IAsyncResult _result = base.BeginInvoke("ValidateToken", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndValidateToken(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("ValidateToken", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetExchangesUserHasAccess(string login, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = login;
                System.IAsyncResult _result = base.BeginInvoke("GetExchangesUserHasAccess", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetExchangesUserHasAccess(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetExchangesUserHasAccess", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetExperts(int idUsuario, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = idUsuario;
                System.IAsyncResult _result = base.BeginInvoke("GetExperts", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.ExpertDTO> EndGetExperts(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.ExpertDTO> _result = ((System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.ExpertDTO>)(base.EndInvoke("GetExperts", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsertLiveAccount(Traderdata.Client.TerminalWEB.TraderdataDesktop.LiveAccountDTO liveAccount, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = liveAccount;
                System.IAsyncResult _result = base.BeginInvoke("InsertLiveAccount", _args, callback, asyncState);
                return _result;
            }
            
            public void EndInsertLiveAccount(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("InsertLiveAccount", _args, result);
            }
            
            public System.IAsyncResult BeginGetLiveAccounts(int usuario, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = usuario;
                System.IAsyncResult _result = base.BeginInvoke("GetLiveAccounts", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.LiveAccountDTO> EndGetLiveAccounts(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.LiveAccountDTO> _result = ((System.Collections.Generic.List<Traderdata.Client.TerminalWEB.TraderdataDesktop.LiveAccountDTO>)(base.EndInvoke("GetLiveAccounts", _args, result)));
                return _result;
            }
        }
    }
}
